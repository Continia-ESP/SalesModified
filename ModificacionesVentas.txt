OBJECT Codeunit 6085770 CDC Sales - Management
{
  OBJECT-PROPERTIES
  {
    Date=16/03/21;
    Time=14:22:14;
    Modified=Yes;
    Version List=DCW13.70.00.7.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CaptureMgt@1000000000 : Codeunit 6085576;
      Text002@1160040001 : TextConst 'ENU=%1 has already been translated to %2 %3\\Do you want to update the translation?;ESP=%1 ya ha sido traducido a %2 %3\\¨Desea actualizar la traducci¢n?';
      Text003@1000000023 : TextConst 'ENU=The document was not found.;ESP=No se encontr¢ el documento.';
      OneAttachedFileMsg@1100288001 : TextConst 'ENU=1 attached file;ESP=1 archivo adjunto';
      MultipleAttachedFilesMsg@1100288000 : TextConst 'ENU=%1 attached files;ESP=%1 archivos adjuntos';

    PROCEDURE GetDocType@1160040008(Document@1160040003 : Record 6085590) : Integer;
    VAR
      SalesHeader@1160040000 : Record 36;
      Field@1160040001 : Record 6085580;
      FieldRule@1160040002 : Record 6085583;
      CaptureMgt@1160040004 : Codeunit 6085576;
      DocType@6085573 : Integer;
      Handled@6085574 : Boolean;
    BEGIN
      OnBeforeGetDocType(Document,DocType,Handled);
      IF Handled THEN
        EXIT(DocType);

      IF NOT Field.GET(Document."Template No.",Field.Type::Header,'DOCTYPE') THEN
        EXIT(SalesHeader."Document Type"::Order);

      CaptureMgt.FilterRule(Field,FieldRule);
      IF NOT FieldRule.FINDFIRST THEN
        EXIT(SalesHeader."Document Type"::Order);

      IF UPPERCASE(FieldRule.Rule) <> UPPERCASE(CaptureMgt.GetText(Document,Field.Type::Header,'DOCTYPE',0)) THEN
        EXIT(SalesHeader."Document Type"::Order)
      ELSE
        EXIT(SalesHeader."Document Type"::"Credit Memo");
    END;

    PROCEDURE GetOurDocNo@1160040006(VAR Document@1000000000 : Record 6085590) : Text[250];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetText(Document,Field.Type::Header,'OURDOCNO',0));
    END;

    PROCEDURE GetDocumentNo@1000000001(VAR Document@1000000000 : Record 6085590) : Code[50];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(COPYSTR(CaptureMgt.GetText(Document,Field.Type::Header,'DOCNO',0),1,50));
    END;

    PROCEDURE GetPostingDate@1160040003(VAR Document@1000000000 : Record 6085590) : Date;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetDate(Document,Field.Type::Header,'POSTINGDATE',0));
    END;

    PROCEDURE GetDocumentDate@1000000003(VAR Document@1000000000 : Record 6085590) : Date;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetDate(Document,Field.Type::Header,'DOCDATE',0));
    END;

    PROCEDURE GetDueDate@1000000002(VAR Document@1000000000 : Record 6085590) : Date;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetDate(Document,Field.Type::Header,'DUEDATE',0));
    END;

    PROCEDURE GetOurContact@1000000004(VAR Document@1000000000 : Record 6085590) : Text[250];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetText(Document,Field.Type::Header,'OURCONTACT',0));
    END;

    PROCEDURE GetCustContact@1160040004(VAR Document@1000000000 : Record 6085590) : Text[250];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetText(Document,Field.Type::Header,'EXTCONTACT',0));
    END;

    PROCEDURE GetOurDocumentNo@1000000005(VAR Document@1000000000 : Record 6085590) : Text[250];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetText(Document,Field.Type::Header,'OURDOCNO',0));
    END;

    PROCEDURE GetCurrencyCode@1000000006(VAR Document@1000000000 : Record 6085590) : Code[20];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(COPYSTR(CaptureMgt.GetText(Document,Field.Type::Header,'CURRCODE',0),1,20));
    END;

    PROCEDURE GetAmountExclVAT@1000000007(VAR Document@1000000000 : Record 6085590) : Decimal;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetDecimal(Document,Field.Type::Header,'AMOUNTEXCLVAT',0));
    END;

    PROCEDURE GetSubtractedAmountExclVAT@1160040009(VAR Document@1000000000 : Record 6085590) : Decimal;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      IF NOT Field.GET(Document."Template No.",Field.Type::Header,'AMOUNTEXCLVAT') THEN
        EXIT;

      EXIT(GetAmountExclVAT(Document) - CaptureMgt.GetAmountToSubtract(Document,Field));
    END;

    PROCEDURE GetAllAmountsExclVAT@161024023(VAR Document@1000000000 : Record 6085590) TotalAmount : Decimal;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      Field.SETRANGE("Template No.",Document."Template No.");
      Field.SETRANGE(Type,Field.Type::Header);
      Field.SETFILTER("Transfer Amount to Document",'<>%1',Field."Transfer Amount to Document"::" ");
      Field.SETRANGE("Subtract from Amount Field",'');
      Field.SETRANGE("Data Type",Field."Data Type"::Number);
      IF Field.FINDSET THEN
        REPEAT
          TotalAmount := TotalAmount + CaptureMgt.GetDecimal(Document,Field.Type::Header,Field.Code,0);
        UNTIL Field.NEXT = 0;
    END;

    PROCEDURE GetAmountInclVAT@1000000008(VAR Document@1000000000 : Record 6085590) : Decimal;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetDecimal(Document,Field.Type::Header,'AMOUNTINCLVAT',0));
    END;

    PROCEDURE GetVATAmount@1000000009(VAR Document@1000000000 : Record 6085590) : Decimal;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetDecimal(Document,Field.Type::Header,'VATAMOUNT',0));
    END;

    PROCEDURE GetAmountToMatch@161024031(VAR Document@161024012 : Record 6085590) Amount : Decimal;
    VAR
      Field@161024013 : Record 6085580;
      TemplField@161024014 : Record 6085580;
    BEGIN
      Field.SETRANGE("Template No.",Document."Template No.");
      Field.SETRANGE(Type,Field.Type::Header);
      Field.SETRANGE("Data Type",Field."Data Type"::Number);
      Field.SETRANGE("Transfer Amount to Document",Field."Transfer Amount to Document"::"If lines are not recognised");
      Field.SETRANGE("Subtract from Amount Field",'');

      IF Field.FINDSET THEN
        REPEAT
          Amount += CaptureMgt.GetDecimal(Document,Field.Type,Field.Code,0);
          Amount -= CaptureMgt.GetAmountToSubtract(Document,Field);
        UNTIL Field.NEXT = 0;
    END;

    PROCEDURE GetPaymentId@1000000011(VAR Document@1000000000 : Record 6085590) : Text[50];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(COPYSTR(CaptureMgt.GetText(Document,Field.Type::Header,'PAYMENT-ID',0),1,50));
    END;

    PROCEDURE GetPostingDescription@1000000012(VAR Document@1000000000 : Record 6085590) : Text[250];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetText(Document,Field.Type::Header,'POSTINGDESC',0));
    END;

    PROCEDURE GetGLAccountNo@161024022(VAR Document@1000000000 : Record 6085590;Suffex@161024012 : Code[10]) : Text[250];
    VAR
      Field@161024013 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetText(Document,Field.Type::Header,'GLACCOUNTNO' + Suffex,0));
    END;

    PROCEDURE GetTranslLineInfo@1160040000(TemplNo@1160040000 : Code[20];CustItemNo@1160040001 : Code[150];UseCustItemNos@1160040003 : Boolean;VAR LineTransl@1160040002 : Record 6085584) : Boolean;
    VAR
      ItemCrossRef@1160040004 : Record 5717;
      Item@1160040005 : Record 27;
      Template@1160040007 : Record 6085579;
      CustNo@1160040006 : Code[20];
    BEGIN
      CLEAR(LineTransl);
      IF CustItemNo = '' THEN
        EXIT;

      LineTransl.SETRANGE("Template No.",TemplNo);
      LineTransl.SETRANGE(Type,LineTransl.Type::"Line Field");
      LineTransl.SETRANGE("Field Code",'NO');
      LineTransl.SETRANGE("Translate From",COPYSTR(CustItemNo,1,MAXSTRLEN(LineTransl."Translate From")));
      LineTransl.SETFILTER("Translate to No.",'<>%1','');
      IF LineTransl.FINDFIRST THEN
        EXIT(TRUE)
      ELSE BEGIN
        Template.GET(TemplNo);
        CustNo := Template.GetSourceID;

        LineTransl.INIT;

        ItemCrossRef.SETCURRENTKEY("Cross-Reference No.","Cross-Reference Type","Cross-Reference Type No.");
        ItemCrossRef.SETRANGE("Cross-Reference No.",COPYSTR(CustItemNo,1,MAXSTRLEN(ItemCrossRef."Cross-Reference No.")));
        ItemCrossRef.SETRANGE("Cross-Reference Type",ItemCrossRef."Cross-Reference Type"::Customer);
        ItemCrossRef.SETRANGE("Cross-Reference Type No.",CustNo);
        IF ItemCrossRef.FINDFIRST THEN BEGIN
          LineTransl."Translate to Type" := LineTransl."Translate to Type"::Item;
          LineTransl."Translate to No." := ItemCrossRef."Item No.";
          LineTransl."Translate to UOM Code" := ItemCrossRef."Unit of Measure";
          LineTransl."Translate to Variant Code" := ItemCrossRef."Variant Code";
        END ELSE BEGIN
          IF UseCustItemNos AND Item.GET(COPYSTR(CustItemNo,1,MAXSTRLEN(Item."No."))) THEN BEGIN
            LineTransl."Translate to Type" := LineTransl."Translate to Type"::Item;
            LineTransl."Translate to No." := Item."No.";
            LineTransl."Translate to UOM Code" := Item."Sales Unit of Measure";
          END ELSE
            EXIT(FALSE);
        END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE GetTranslLineInfo2@1160040001(Document@1160040000 : Record 6085590;LineNo@1160040001 : Integer;VAR LineTransl@1160040003 : Record 6085584) : Boolean;
    VAR
      Template@1160040002 : Record 6085579;
    BEGIN
      IF Template.GET(Document."Template No.") THEN
        EXIT(GetTranslLineInfo(Document."Template No.",GetLineAccountNo(Document,LineNo),
          Template."Use Vendor/Customer Item Nos.",LineTransl));
    END;

    PROCEDURE GetLineAccountNo@1000000013(VAR Document@1000000000 : Record 6085590;LineNo@1000000001 : Integer) : Code[250];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetText(Document,Field.Type::Line,'NO',LineNo));
    END;

    PROCEDURE GetLineDescription@1000000014(VAR Document@1000000001 : Record 6085590;LineNo@1000000000 : Integer) : Text[250];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetText(Document,Field.Type::Line,'DESC',LineNo));
    END;

    PROCEDURE GetLineQuantity@1000000015(VAR Document@1000000001 : Record 6085590;LineNo@1000000000 : Integer) : Decimal;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetDecimal(Document,Field.Type::Line,'QUANTITY',LineNo));
    END;

    PROCEDURE GetLineUnitCost@1000000016(VAR Document@1000000001 : Record 6085590;LineNo@1000000000 : Integer) : Decimal;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetDecimal(Document,Field.Type::Line,'UNITCOST',LineNo));
    END;

    PROCEDURE GetLineDiscAmount@1000000017(VAR Document@1000000001 : Record 6085590;LineNo@1000000000 : Integer) : Decimal;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetDecimal(Document,Field.Type::Line,'DISCAMOUNT',LineNo));
    END;

    PROCEDURE GetLineDiscPct@1000000018(VAR Document@1000000001 : Record 6085590;LineNo@1000000000 : Integer) : Decimal;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetDecimal(Document,Field.Type::Line,'DISCPCT',LineNo));
    END;

    PROCEDURE GetLineAmount@1000000019(VAR Document@1000000001 : Record 6085590;LineNo@1000000000 : Integer) : Decimal;
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetDecimal(Document,Field.Type::Line,'LINEAMOUNT',LineNo));
    END;

    PROCEDURE GetOurDocNoDesc@1000000025(VAR Document@1000000000 : Record 6085590) : Text[250];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      IF Field.GET(Document."Template No.",Field.Type::Header,'OURDOCNO') THEN
        EXIT(Field."Field Name");
    END;

    PROCEDURE GetAmountExclVATDesc@1000000027(VAR Document@1000000000 : Record 6085590) : Text[250];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      IF Field.GET(Document."Template No.",Field.Type::Header,'AMOUNTEXCLVAT') THEN
        EXIT(Field."Field Name");
    END;

    PROCEDURE GetDocDateDesc@1000000026(VAR Document@1000000000 : Record 6085590) : Text[250];
    VAR
      Field@161024012 : Record 6085580;
    BEGIN
      IF Field.GET(Document."Template No.",Field.Type::Header,'DOCDATE') THEN
        EXIT(Field."Field Name");
    END;

    PROCEDURE ShowDocFromSalesDoc@161024029(SalesHeader@1000000002 : Record 36);
    VAR
      Document@1000000000 : Record 6085590;
    BEGIN
      Document.SETCURRENTKEY("Created Doc. Table No.","Created Doc. Subtype","Created Doc. No.","Created Doc. Ref. No.");
      Document.SETRANGE("Created Doc. Table No.",DATABASE::"Sales Header");
      Document.SETRANGE("Created Doc. Subtype",SalesHeader."Document Type");
      Document.SETRANGE("Created Doc. No.",SalesHeader."No.");
      IF NOT Document.FINDFIRST THEN
        ERROR(Text003);
      Document.OpenPdfFile;
    END;

    PROCEDURE ShowDocFromPostedInv@1000000030(SalesInvHeader@1000000002 : Record 112);
    VAR
      Document@1000000000 : Record 6085590;
      SalesHeader@1000000001 : Record 36;
    BEGIN
      Document.SETCURRENTKEY("Created Doc. Table No.","Created Doc. Subtype","Created Doc. No.","Created Doc. Ref. No.");
      Document.SETRANGE("Created Doc. Table No.",DATABASE::"Sales Header");
      Document.SETRANGE("Created Doc. Subtype",SalesHeader."Document Type"::Order);
      Document.SETRANGE("Created Doc. No.",SalesInvHeader."Order No.");
      IF NOT Document.FINDFIRST THEN
        ERROR(Text003);
      Document.OpenPdfFile;
    END;

    PROCEDURE ShowDocFromPostedCrMemo@1000000032(SalesCrMemoHeader@1000000002 : Record 114);
    VAR
      Document@1000000000 : Record 6085590;
      SalesHeader@1000000001 : Record 36;
    BEGIN
      Document.SETCURRENTKEY("Created Doc. Table No.","Created Doc. Subtype","Created Doc. No.","Created Doc. Ref. No.");
      Document.SETRANGE("Created Doc. Table No.",DATABASE::"Sales Header");
      Document.SETRANGE("Created Doc. Subtype",SalesHeader."Document Type"::"Credit Memo");
      Document.SETRANGE("Created Doc. No.",SalesCrMemoHeader."Pre-Assigned No.");
      IF NOT Document.FINDFIRST THEN
        ERROR(Text003);
      Document.OpenPdfFile;
    END;

    PROCEDURE ShowDocFromVendLedgEntry@1000000034(CustLedgEntry@1000000002 : Record 21);
    VAR
      Document@1000000000 : Record 6085590;
      SalesCrMemoHeader@1000000003 : Record 114;
      SalesInvHeader@1000000004 : Record 112;
      SalesHeader@1000000001 : Record 36;
    BEGIN
      Document.SETCURRENTKEY("Created Doc. Table No.","Created Doc. Subtype","Created Doc. No.","Created Doc. Ref. No.");
      Document.SETRANGE("Created Doc. Table No.",DATABASE::"Sales Header");

      IF CustLedgEntry."Document Type" = CustLedgEntry."Document Type"::Invoice THEN BEGIN
        SalesInvHeader.GET(CustLedgEntry."Document No.");
        Document.SETRANGE("Created Doc. Subtype",SalesHeader."Document Type"::Order);
        Document.SETRANGE("Created Doc. No.",SalesInvHeader."Order No.");
      END ELSE
        IF CustLedgEntry."Document Type" = CustLedgEntry."Document Type"::"Credit Memo" THEN BEGIN
          SalesCrMemoHeader.GET(CustLedgEntry."Document No.");
          Document.SETRANGE("Created Doc. Subtype",SalesHeader."Document Type"::"Credit Memo");
          Document.SETRANGE("Created Doc. No.",SalesCrMemoHeader."Pre-Assigned No.");
        END ELSE
          ERROR(Text003);

      IF NOT Document.FINDFIRST THEN
        ERROR(Text003);
      Document.OpenPdfFile;
    END;

    PROCEDURE ShowDocFromDocFromNoAndDate@161024032(DocNo@161024012 : Code[20];PostingDate@161024013 : Date;ShowError@161024020 : Boolean);
    VAR
      Document@161024019 : Record 6085590;
      SalesInvHeader@161024014 : Record 112;
      SalesCrMemoHeader@161024018 : Record 114;
      SalesHeader@161024017 : Record 36;
      DocSubType@161024015 : Integer;
      DocId@161024016 : Code[20];
    BEGIN
      IF SalesInvHeader.GET(DocNo) AND (SalesInvHeader."Posting Date" = PostingDate) THEN BEGIN
        DocSubType := SalesHeader."Document Type"::Order;
        DocId := SalesInvHeader."Order No.";
      END ELSE
        IF SalesCrMemoHeader.GET(DocNo) AND (SalesCrMemoHeader."Posting Date" = PostingDate) THEN BEGIN
          DocSubType := SalesHeader."Document Type"::"Credit Memo";
          DocId := SalesCrMemoHeader."Pre-Assigned No.";
        END;

      IF DocId = '' THEN BEGIN
        IF ShowError THEN
          ERROR(Text003)
        ELSE
          EXIT;
      END;

      Document.SETCURRENTKEY("Created Doc. Table No.","Created Doc. Subtype","Created Doc. No.","Created Doc. Ref. No.");
      Document.SETRANGE("Created Doc. Table No.",DATABASE::"Sales Header");
      Document.SETRANGE("Created Doc. Subtype",DocSubType);
      Document.SETRANGE("Created Doc. No.",DocId);

      IF NOT Document.FINDFIRST THEN BEGIN
        IF ShowError THEN
          ERROR(Text003)
        ELSE
          EXIT;
      END;

      Document.OpenPdfFile;
    END;

    PROCEDURE GetTotalAmounts@1000000039(VAR SalesHeader@1000000000 : Record 36;VAR TotalAmountExclVAT@1000000001 : Decimal;VAR TotalVATAmount@1000000002 : Decimal);
    VAR
      SalesLine@1000000004 : Record 37;
      TempVATAmountLine@1000000005 : Record 290;
    BEGIN
      SalesLine.CalcVATAmountLines(0,SalesHeader,SalesLine,TempVATAmountLine);
      TotalAmountExclVAT := TempVATAmountLine."VAT Base";
      TotalVATAmount := TempVATAmountLine."VAT Amount";
    END;

    PROCEDURE GetNoOfSalesOrders@161024014(VAR Document@161024012 : Record 6085590) : Integer;
    VAR
      SalesHeader@161024013 : Record 36;
    BEGIN
      IF Document.GetSourceID = '' THEN
        EXIT;

      SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
      SalesHeader.SETRANGE("Sell-to Customer No.",Document.GetSourceID);
      EXIT(SalesHeader.COUNT);
    END;

    PROCEDURE GetNoOfSalesReturnOrders@161024018(VAR Document@161024012 : Record 6085590) : Integer;
    VAR
      SalesHeader@161024013 : Record 36;
    BEGIN
      IF Document.GetSourceID = '' THEN
        EXIT;

      SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::"Return Order");
      SalesHeader.SETRANGE("Sell-to Customer No.",Document.GetSourceID);
      EXIT(SalesHeader.COUNT);
    END;

    PROCEDURE LookupNoOfSalesOrders@161024021(VAR Document@161024012 : Record 6085590) : Integer;
    VAR
      SalesHeader@161024013 : Record 36;
    BEGIN
      IF Document.GetSourceID = '' THEN
        EXIT;

      SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
      SalesHeader.SETRANGE("Sell-to Customer No.",Document.GetSourceID);
      PAGE.RUN(0,SalesHeader);
    END;

    PROCEDURE LookupNoOfSalesReturnOrders@161024020(VAR Document@161024012 : Record 6085590) : Integer;
    VAR
      SalesHeader@161024013 : Record 36;
    BEGIN
      IF Document.GetSourceID = '' THEN
        EXIT;

      SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::"Return Order");
      SalesHeader.SETRANGE("Sell-to Customer No.",Document.GetSourceID);
      PAGE.RUN(0,SalesHeader);
    END;

    PROCEDURE GetComparableAmounts@161024016(VAR SalesHeader@161024012 : Record 36;VAR SalesAmountExclVAT@161024013 : Decimal;VAR SalesAmountInclVAT@161024015 : Decimal;VAR DocAmountExclVAT@161024016 : Decimal;VAR DocAmountInclVAT@161024014 : Decimal);
    VAR
      Document@161024019 : Record 6085590;
      VATAmount@161024018 : Decimal;
      ZeroRatedAmount@161024017 : Decimal;
    BEGIN
      GetTotalAmounts(SalesHeader,SalesAmountExclVAT,VATAmount);
      SalesAmountExclVAT := SalesAmountExclVAT + ZeroRatedAmount;
      SalesAmountInclVAT := SalesAmountExclVAT + VATAmount;

      Document.SETCURRENTKEY("Created Doc. Table No.","Created Doc. Subtype","Created Doc. No.","Created Doc. Ref. No.");
      Document.SETRANGE("Created Doc. Table No.",DATABASE::"Sales Header");
      Document.SETRANGE("Created Doc. Subtype",SalesHeader."Document Type");
      Document.SETRANGE("Created Doc. No.",SalesHeader."No.");
      IF Document.FINDFIRST THEN BEGIN
        DocAmountExclVAT := GetAllAmountsExclVAT(Document);
        DocAmountInclVAT := GetAmountInclVAT(Document);
      END ELSE BEGIN
        DocAmountExclVAT := 0;
        DocAmountInclVAT := 0;
      END;
    END;

    PROCEDURE GetDocumentHeaderAmounts@161024033(SalesHeader@161024014 : Record 36;VAR AmountExclVAT@161024013 : Decimal;VAR AmountInclVAT@161024012 : Decimal;VAR AmountExclVATLCY@161024017 : Decimal;VAR AmountInclVATLCY@161024015 : Decimal) : Boolean;
    VAR
      Document@161024016 : Record 6085590;
    BEGIN
      AmountExclVAT := 0;
      AmountInclVAT := 0;
      AmountExclVATLCY := 0;
      AmountInclVATLCY := 0;

      Document.SETCURRENTKEY("Created Doc. Table No.","Created Doc. Subtype","Created Doc. No.","Created Doc. Ref. No.");
      Document.SETRANGE("Created Doc. Table No.",DATABASE::"Sales Header");
      Document.SETRANGE("Created Doc. Subtype",SalesHeader."Document Type");
      Document.SETRANGE("Created Doc. No.",SalesHeader."No.");
      IF NOT Document.FINDFIRST THEN
        EXIT;

      AmountExclVAT := Document."Amount Excl. VAT";
      AmountInclVAT := Document."Amount Incl. VAT";
      IF SalesHeader."Currency Factor" = 0 THEN
        SalesHeader."Currency Factor" := 1;
      AmountExclVATLCY := ROUND(Document."Amount Excl. VAT" / SalesHeader."Currency Factor");
      AmountInclVATLCY := ROUND(Document."Amount Incl. VAT" / SalesHeader."Currency Factor");

      EXIT(TRUE);
    END;

    PROCEDURE GetSalesStatusAmounts@161024034(VAR SalesHeader@161024016 : Record 36;VAR ImportedAmountExclVAT@6085576 : Decimal;VAR ImportedAmountInclVAT@6085575 : Decimal;VAR AssignedAmountExclVAT@6085574 : Decimal;VAR AssignedAmountInclVAT@6085573 : Decimal);
    VAR
      TempSalesLine@161024023 : TEMPORARY Record 37;
      TotalSalesLine@161024022 : Record 37;
      TotalSalesLineLCY@161024021 : Record 37;
      SalesPost@161024020 : Codeunit 80;
      TempAmount@161024018 : Decimal;
      VATText@161024017 : Text[30];
    BEGIN
      ImportedAmountExclVAT:= 0;
      ImportedAmountInclVAT := 0;
      AssignedAmountExclVAT := 0;
      AssignedAmountInclVAT := 0;

      IF (SalesHeader."No." = '') OR (SalesHeader."Sell-to Customer No." = '') THEN
        EXIT;
      SalesPost.GetSalesLines(SalesHeader,TempSalesLine,0);
      CLEAR(SalesPost);
      SalesPost.SumSalesLinesTemp(SalesHeader,TempSalesLine,0,TotalSalesLine,TotalSalesLineLCY,TempAmount,VATText,
        TempAmount,TempAmount,TempAmount);
      AssignedAmountExclVAT := TotalSalesLine.Amount;
      AssignedAmountInclVAT := TotalSalesLine."Amount Including VAT";

      GetDocumentHeaderAmounts(SalesHeader,ImportedAmountExclVAT,ImportedAmountInclVAT,TempAmount,TempAmount);
    END;

    PROCEDURE ChangeDocAmounts@161024035(SalesHeader@161024013 : Record 36);
    VAR
      Document@161024014 : Record 6085590;
      DocAmount@161024012 : Page 6085721;
    BEGIN
      SalesHeader.TESTFIELD(Status,SalesHeader.Status::Open);

      Document.SETCURRENTKEY("Created Doc. Table No.","Created Doc. Subtype","Created Doc. No.","Created Doc. Ref. No.");
      Document.SETRANGE("Created Doc. Table No.",DATABASE::"Sales Header");
      Document.SETRANGE("Created Doc. Subtype",SalesHeader."Document Type");
      Document.SETRANGE("Created Doc. No.",SalesHeader."No.");
      Document.FINDFIRST;

      SalesHeader.FILTERGROUP(2);
      SalesHeader.SETRECFILTER;
      SalesHeader.FILTERGROUP(0);
      DocAmount.SETRECORD(SalesHeader);
      DocAmount.SETTABLEVIEW(SalesHeader);
      DocAmount.LOOKUPMODE(TRUE);
      DocAmount.SetAmounts(Document."Amount Excl. VAT",Document."Amount Incl. VAT");
      IF DocAmount.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      DocAmount.GetAmounts(Document."Amount Excl. VAT",Document."Amount Incl. VAT");
      Document.MODIFY;
    END;

    PROCEDURE GetResponsibillityCenter@1160760000(VAR Document@161024012 : Record 6085590) : Code[20];
    VAR
      Field@161024013 : Record 6085580;
    BEGIN
      EXIT(CaptureMgt.GetText(Document,Field.Type::Header,'RESPCENTER',0));
    END;

    PROCEDURE UpdateLineNoTrans@1160040002(VAR Document@1160040000 : Record 6085590;LineNo@1160040002 : Integer;ToType@1000 : Integer;ToNo@1001 : Code[20]);
    VAR
      Template@1160040003 : Record 6085579;
      Item@1160040005 : Record 27;
      ItemCrossRef@1160040006 : Record 5717;
      LineTransl@1160040008 : Record 6085584;
      CustItemNo@1160040004 : Code[150];
    BEGIN
      Template.GET(Document."Template No.");

      CustItemNo := GetLineAccountNo(Document,LineNo);

      IF CustItemNo = '' THEN
        EXIT;

      ItemCrossRef.SETCURRENTKEY("Cross-Reference No.","Cross-Reference Type","Cross-Reference Type No.");
      ItemCrossRef.SETRANGE("Cross-Reference No.",COPYSTR(CustItemNo,1,MAXSTRLEN(ItemCrossRef."Cross-Reference No.")));
      ItemCrossRef.SETRANGE("Cross-Reference Type",ItemCrossRef."Cross-Reference Type"::Customer);
      ItemCrossRef.SETRANGE("Cross-Reference Type No.",Document.GetSourceID);

      LineTransl.SETRANGE("Template No.",Template."No.");
      LineTransl.SETRANGE(Type,LineTransl.Type::"Line Field");
      LineTransl.SETRANGE("Field Code",'NO');
      LineTransl.SETRANGE("Translate From",COPYSTR(CustItemNo,1,MAXSTRLEN(LineTransl."Translate From")));

      IF (ToType = LineTransl."Translate to Type"::" ") OR (ToNo = '') THEN BEGIN
        ItemCrossRef.DELETEALL(TRUE);
        LineTransl.DELETEALL(TRUE);
        EXIT;
      END;

      CASE TRUE OF
        (ToType = LineTransl."Translate to Type"::Item) :
          BEGIN
            IF ItemCrossRef.FINDFIRST THEN BEGIN
              IF ItemCrossRef."Item No." <> ToNo THEN BEGIN
                IF NOT CONFIRM(Text002,FALSE,CustItemNo,ItemCrossRef.FIELDCAPTION("Item No."),ItemCrossRef."Item No.") THEN
                  ERROR('');

                ItemCrossRef.DELETE(TRUE);
                ItemCrossRef."Item No." := '';
                ItemCrossRef."Variant Code" := '';
                ItemCrossRef."Unit of Measure" := '';
                ItemCrossRef.VALIDATE("Item No.",ToNo);
                ItemCrossRef.VALIDATE("Unit of Measure",Item."Sales Unit of Measure");
                ItemCrossRef.INSERT(TRUE);
              END;
            END ELSE BEGIN
              IF (ToNo <> '') AND (ToType <> LineTransl."Translate to Type"::" ") THEN BEGIN
                ItemCrossRef.INIT;
                ItemCrossRef.VALIDATE("Item No.",ToNo);
                ItemCrossRef.VALIDATE("Unit of Measure",Item."Sales Unit of Measure");
                ItemCrossRef.VALIDATE("Cross-Reference Type",ItemCrossRef."Cross-Reference Type"::Customer);
                ItemCrossRef.VALIDATE("Cross-Reference Type No.",Document.GetSourceID);
                ItemCrossRef.VALIDATE("Cross-Reference No.",COPYSTR(CustItemNo,1,MAXSTRLEN(ItemCrossRef."Cross-Reference No.")));
                ItemCrossRef.INSERT(TRUE);
              END;
            END;
          END;
        ELSE
          BEGIN
            IF LineTransl.FINDFIRST THEN BEGIN
              IF NOT (LineTransl."Translate to No." IN ['',ToNo]) THEN BEGIN
                IF NOT CONFIRM(Text002,FALSE,CustItemNo,LineTransl."Translate to Type",LineTransl."Translate to No.") THEN
                  ERROR('');

                LineTransl.VALIDATE("Translate to Type",ToType);
                LineTransl.VALIDATE("Translate to No.",ToNo);
                IF ToType = LineTransl."Translate to Type"::Item THEN BEGIN
                  Item.GET(ToNo);
                  LineTransl.VALIDATE("Translate to UOM Code",Item."Sales Unit of Measure");
                END;
                LineTransl.MODIFY(TRUE);
              END;
            END ELSE BEGIN
              LineTransl.INIT;
              LineTransl.VALIDATE("Template No.",Template."No.");
              LineTransl.VALIDATE(Type,LineTransl.Type::"Line Field");
              LineTransl.VALIDATE("Field Code",'NO');
              LineTransl.VALIDATE("Translate From",COPYSTR(CustItemNo,1,MAXSTRLEN(LineTransl."Translate From")));
              LineTransl.VALIDATE("Translate to Type",ToType);
              LineTransl.VALIDATE("Translate to No.",ToNo);
              LineTransl.INSERT(TRUE);
          END;
        END;
      END;
    END;

    PROCEDURE UpdateDefDocValFromOrder@1160040005(VAR Document@1160040000 : Record 6085590;SalesOrderNo@1160040001 : Code[20]);
    VAR
      SalesHeader@1160040002 : Record 36;
      TemplField@1160040003 : Record 6085580;
      Value2@1160040004 : Record 6085593;
    BEGIN
      SalesHeader.GET(GetDocType(Document),SalesOrderNo);

      IF GetOurContact(Document) = '' THEN
        UpdateDocField(Document,'OURCONTACT',SalesHeader."Salesperson Code");

      IF GetCustContact(Document) = '' THEN
        UpdateDocField(Document,'EXTCONTACT',SalesHeader."Sell-to Contact");

      IF GetCurrencyCode(Document) = '' THEN
        UpdateDocField(Document,'CURRCODE',SalesHeader."Currency Code");

      IF GetDocumentDate(Document) = 0D THEN
        UpdateDocField(Document,'CURRCODE',SalesHeader."Currency Code");

      IF TemplField.GET(Document."Template No.",TemplField.Type::Header,'DOCDATE') THEN
        IF (CaptureMgt.GetFieldValue(Document,TemplField,0,Value2)) AND (Value2."Value (Date)" = 0D) THEN BEGIN
          Value2."Value (Date)" := TODAY;
          Value2."Is Valid" := TRUE;
          Value2.MODIFY;
        END;
    END;

    PROCEDURE UpdateDocField@1160040007(VAR Document@1160040004 : Record 6085590;FieldCode@1160040001 : Code[20];Value@1160040002 : Text[1024]);
    VAR
      TemplField@1160040000 : Record 6085580;
    BEGIN
      WITH Document DO BEGIN
        IF TemplField.GET("Template No.",TemplField.Type::Header,FieldCode) THEN
          CaptureMgt.UpdateFieldValue("No.",0,0,TemplField,Value,TRUE,FALSE);
      END;
    END;

    PROCEDURE GetDocumentNoSeriesCode@6085573(VAR Document@1000000000 : Record 6085590) : Code[20];
    VAR
      Field@161024012 : Record 6085580;
      CaptureMgt@1000 : Codeunit 6085576;
    BEGIN
      EXIT(COPYSTR(CaptureMgt.GetText(Document,Field.Type::Header,'NOSERIES',0),1,20));
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeGetDocType@6085574(Document@6085573 : Record 6085590;VAR DocType@6085574 : Integer;VAR Handled@6085575 : Boolean);
    BEGIN
    END;

    [External]
    PROCEDURE GetNoOfDocsLabelForSalesDoc@6085593(SalesHeader@6085573 : Record 36) : Text[1024];
    VAR
      Document@6085575 : Record 6085590;
      FileType@6085574 : 'All,OCR,Miscellaneous';
    BEGIN
      FilterDocument(Document,DATABASE::"Sales Header",SalesHeader."Document Type",SalesHeader."No.",FileType::All);
      IF NOT Document.ISEMPTY THEN
        EXIT(GetNoOfDocumentsLabel(Document.COUNT));
    END;

    PROCEDURE GetNoOfDocsLabelForPostedInv@6085625(SalesInvHeader@6085573 : Record 112) : Text[1024];
    VAR
      SalesHeader@6085574 : Record 36;
      NoOfDocs@6085575 : Integer;
      FileType@6085576 : 'All,OCR,Miscellaneous';
      Document@6085577 : Record 6085590;
    BEGIN
      FilterDocument(Document,DATABASE::"Sales Header",SalesHeader."Document Type"::Order,SalesInvHeader."Order No.",
        FileType::All);
      IF NOT Document.ISEMPTY THEN
        NoOfDocs := Document.COUNT;

      Document.RESET;
      FilterDocument(Document,DATABASE::"Sales Invoice Header",0,SalesInvHeader."No.",FileType::All);
      IF NOT Document.ISEMPTY THEN
        NoOfDocs += Document.COUNT;

      IF NoOfDocs <> 0 THEN
        EXIT(GetNoOfDocumentsLabel(NoOfDocs));
    END;

    PROCEDURE GetNoOfDocsLabelForPostCrMemo@6085627(SalesCrMemoHeader@6085573 : Record 114) : Text[1024];
    VAR
      SalesHeader@6085574 : Record 36;
      Document@6085575 : Record 6085590;
      NoOfDocs@6085576 : Integer;
      FileType@6085577 : 'All,OCR,Miscellaneous';
    BEGIN
      FilterDocument(Document,DATABASE::"Sales Header",SalesHeader."Document Type"::"Return Order",
        SalesCrMemoHeader."Pre-Assigned No.",FileType::All);
      IF NOT Document.ISEMPTY THEN
        NoOfDocs := Document.COUNT;

      Document.RESET;
      FilterDocument(Document,DATABASE::"Sales Cr.Memo Header",0,SalesCrMemoHeader."No.",FileType::All);
      IF NOT Document.ISEMPTY THEN
        NoOfDocs += Document.COUNT;

      IF NoOfDocs <> 0 THEN
        EXIT(GetNoOfDocumentsLabel(NoOfDocs));
    END;

    LOCAL PROCEDURE FilterDocument@6085594(VAR Document@6085576 : Record 6085590;TableNo@6085575 : Integer;DocumentType@6085574 : Option;DocumentNo@6085573 : Code[20];FileType@6085577 : 'All,Document,Miscellaneous');
    BEGIN
      Document.SETCURRENTKEY("Created Doc. Table No.","Created Doc. Subtype","Created Doc. No.","Created Doc. Ref. No.");
      Document.SETRANGE("Created Doc. Table No.",TableNo);
      Document.SETRANGE("Created Doc. Subtype",DocumentType);
      Document.SETRANGE("Created Doc. No.",DocumentNo);
      CASE FileType OF
        FileType::Document:
          Document.SETFILTER("File Type",'%1|%2',Document."File Type"::OCR,Document."File Type"::XML);
        FileType::Miscellaneous:
          Document.SETRANGE("File Type",Document."File Type"::Miscellaneous);
        FileType::All:
          Document.SETRANGE("File Type"); // Remove filter if set to display all records
      END;
    END;

    LOCAL PROCEDURE GetNoOfDocumentsLabel@1100288000(NoOfDocuments@1100288000 : Integer) : Text[1024];
    BEGIN
      IF NoOfDocuments = 0 THEN
        EXIT;

      IF NoOfDocuments = 1 THEN
        EXIT(OneAttachedFileMsg)
      ELSE
        EXIT(STRSUBSTNO(MultipleAttachedFilesMsg,NoOfDocuments));
    END;

    [External]
    PROCEDURE ShowDocumentListForSalesDoc@6085592(SalesHeader@6085573 : Record 36);
    VAR
      Document@6085574 : Record 6085590;
      FileType@6085576 : 'All,OCR,Miscellaneous';
      DocumentFileList@6085575 : Page 6085768;
    BEGIN
      Document.FILTERGROUP(4);
      FilterDocument(Document,DATABASE::"Sales Header",SalesHeader."Document Type",SalesHeader."No.",FileType::All);
      Document.FILTERGROUP(0);

      DocumentFileList.SETTABLEVIEW(Document);
      DocumentFileList.RUNMODAL;
    END;

    PROCEDURE ShowDocumentListForPostedInv@6085610(SalesInvHeader@6085573 : Record 112);
    VAR
      SalesHeader@6085574 : Record 36;
      Document@6085576 : Record 6085590;
      FileType@6085575 : 'All,OCR,Miscellaneous';
      DocumentFileList@6085578 : Page 6085768;
    BEGIN
      Document.FILTERGROUP(4);
      FilterDocument(Document,DATABASE::"Sales Header",SalesHeader."Document Type"::Order,SalesInvHeader."Order No.",FileType::All);
      Document.FILTERGROUP(0);

      DocumentFileList.SETTABLEVIEW(Document);
      DocumentFileList.RUNMODAL;
    END;

    PROCEDURE ShowDocumentListForPostCrMemo@6085632(SalesCrMemoHeader@6085573 : Record 114);
    VAR
      SalesHeader@6085574 : Record 38;
      Document@6085576 : Record 6085590;
      FileType@6085577 : 'All,OCR,Miscellaneous';
      DocumentFileList@6085575 : Page 6085768;
    BEGIN
      Document.FILTERGROUP(4);
      FilterDocument(Document,DATABASE::"Sales Header",SalesHeader."Document Type"::"Return Order",SalesCrMemoHeader."Pre-Assigned No.",
        FileType::All);
      Document.FILTERGROUP(0);

      DocumentFileList.SETTABLEVIEW(Document);
      DocumentFileList.RUNMODAL;
    END;

    PROCEDURE HasDocumentsSalesDoc@6085595(SalesHeader@6085573 : Record 36) : Boolean;
    VAR
      Document@6085574 : Record 6085590;
      FileType@6085575 : 'All,Document,Miscellaneous';
    BEGIN
      FilterDocument(Document,DATABASE::"Sales Header",SalesHeader."Document Type",SalesHeader."No.",FileType::Document);
      EXIT(NOT Document.ISEMPTY);
    END;

    PROCEDURE HasDocumentsPostedInv@6085596(SalesInvHeader@6085573 : Record 112) : Boolean;
    VAR
      SalesHeader@6085574 : Record 36;
      Document@6085575 : Record 6085590;
      FileType@6085576 : 'All,Document,Miscellaneous';
    BEGIN
      FilterDocument(Document,DATABASE::"Sales Header",SalesHeader."Document Type"::Order,SalesInvHeader."Order No.",
        FileType::Document);
      EXIT(NOT Document.ISEMPTY);
    END;

    PROCEDURE HasDocumentsCrMemo@6085597(SalesCrMemoHeader@6085573 : Record 114) : Boolean;
    VAR
      Document@6085574 : Record 6085590;
      SalesHeader@6085575 : Record 36;
      FileType@6085576 : 'All,Document,Miscellaneous';
    BEGIN
      FilterDocument(Document,DATABASE::"Sales Header",SalesHeader."Document Type"::"Return Order",
        SalesCrMemoHeader."Pre-Assigned No.",FileType::Document);
      EXIT(NOT Document.ISEMPTY);
    END;

    BEGIN
    END.
  }
}

OBJECT Page 42 Sales Order
{
  OBJECT-PROPERTIES
  {
    Date=16/03/21;
    Time=13:19:00;
    Modified=Yes;
    Version List=NAVW114.00,NAVES14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Order;
               ESP=Pedido venta];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Order));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Approve,Release,Posting,Prepare,Order,Request Approval,History,Print/Send,Navigate;
                                ESP=Nuevo,Procesar,Informe,Aprobar,Lanzar,Registrar,Preparar,Pedido,Solicitar aprobaci¢n,Historial,Imprimir y enviar,Navegar];
    OnInit=VAR
             SalesReceivablesSetup@1000 : Record 311;
           BEGIN
             JobQueuesUsed := SalesReceivablesSetup.JobQueueActive;
             SetExtDocNoMandatoryCondition;
           END;

    OnOpenPage=VAR
                 PaymentServiceSetup@1003 : Record 1060;
                 CRMIntegrationManagement@1000 : Codeunit 5330;
                 OfficeMgt@1001 : Codeunit 1630;
                 SIIManagement@1100000 : Codeunit 10756;
                 PermissionManager@1002 : Codeunit 9002;
               BEGIN
                 IF UserMgt.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 ActivateFields;

                 SETRANGE("Date Filter",0D,WORKDATE - 1);

                 SetDocNoVisible;

                 CRMIntegrationEnabled := CRMIntegrationManagement.IsCRMIntegrationEnabled;
                 IsOfficeHost := OfficeMgt.IsAvailable;
                 IsSaas := PermissionManager.SoftwareAsAService;

                 IF "Quote No." <> '' THEN
                   ShowQuoteNo := TRUE;
                 IF ("No." <> '') AND ("Sell-to Customer No." = '') THEN
                   DocumentIsPosted := (NOT GET("Document Type","No."));

                 SIIManagement.CombineOperationDescription("Operation Description","Operation Description 2",OperationDescription);
                 PaymentServiceVisible := PaymentServiceSetup.IsPaymentServiceVisible;
               END;

    OnAfterGetRecord=BEGIN
                       ShowQuoteNo := "Quote No." <> '';

                       SetControlVisibility;
                       UpdateShipToBillToGroupVisibility;
                       WorkDescription := GetWorkDescription;
                     END;

    OnNewRecord=BEGIN
                  xRec.INIT;
                  "Responsibility Center" := UserMgt.GetSalesFilter;
                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetSellToCustomerFromFilter;

                  SetDefaultPaymentServices;
                  UpdateShipToBillToGroupVisibility;
                END;

    OnInsertRecord=BEGIN
                     IF DocNoVisible THEN
                       CheckCreditMaxBeforeInsert;

                     IF ("Sell-to Customer No." = '') AND (GETFILTER("Sell-to Customer No.") <> '') THEN
                       CurrPage.UPDATE(FALSE);
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=VAR
                       InstructionMgt@1001 : Codeunit 1330;
                     BEGIN
                       IF ShowReleaseNotification THEN
                         IF NOT InstructionMgt.ShowConfirmUnreleased THEN
                           EXIT(FALSE);
                       IF NOT DocumentIsPosted THEN
                         EXIT(ConfirmCloseUnposted);
                     END;

    OnAfterGetCurrRecord=VAR
                           SalesHeader@1001 : Record 36;
                           CRMCouplingManagement@1000 : Codeunit 5331;
                           CustCheckCrLimit@1002 : Codeunit 312;
                           SIIManagement@1100000 : Codeunit 10756;
                         BEGIN
                           DynamicEditable := CurrPage.EDITABLE;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                           CRMIsCoupledToRecord := CRMIntegrationEnabled;
                           IF CRMIsCoupledToRecord THEN
                             CRMIsCoupledToRecord := CRMCouplingManagement.IsRecordCoupledToCRM(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           UpdatePaymentService;
                           IF CallNotificationCheck THEN BEGIN
                             SalesHeader := Rec;
                             SalesHeader.CALCFIELDS("Amount Including VAT");
                             CustCheckCrLimit.SalesHeaderCheck(SalesHeader);
                             CheckItemAvailabilityInLines;
                             CallNotificationCheck := FALSE;
                           END;

                           SIIManagement.CombineOperationDescription("Operation Description","Operation Description 2",OperationDescription);

                           //<DC>
                           IF ContiniaLicenseMgt.HasLicenseAccessToDC THEN BEGIN
                             ShowCaptureUIFactBox := SalesMgt.HasDocumentsSalesDoc(Rec);
                             NoOfDocuments := SalesMgt.GetNoOfDocsLabelForSalesDoc(Rec);
                           END;
                           //</DC>
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 59      ;1   ;ActionGroup;
                      CaptionML=[ENU=O&rder;
                                 ESP=&Pedido];
                      Image=Order }
      { 61      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 ESP=Estad¡sticas];
                      ToolTipML=[ENU=View statistical information, such as the value of posted entries, for the record.;
                                 ESP=Permite ver informaci¢n estad¡stica del registro, como el valor de los movimientos registrados.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Statistics;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 Handled@1000 : Boolean;
                               BEGIN
                                 OnBeforeStatisticsAction(Rec,Handled);
                                 IF NOT Handled THEN BEGIN
                                   OpenSalesOrderStatistics;
                                   SalesCalcDiscountByType.ResetRecalculateInvoiceDisc(Rec);
                                 END
                               END;
                                }
      { 62      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Customer;
                                 ESP=Cliente];
                      ToolTipML=[ENU=View or edit detailed information about the customer on the sales document.;
                                 ESP=Permite ver o editar la informaci¢n detallada sobre el cliente en el documento de venta.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=Yes;
                      Enabled=IsCustomerOrContactNotEmpty;
                      Image=Customer;
                      PromotedCategory=Category12 }
      { 122     ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESP=Dimensiones];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ESP=Permite ver o editar dimensiones, como el  rea, el proyecto o el departamento, que pueden asignarse a los documentos de venta y compra para distribuir costes y analizar el historial de transacciones.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      Enabled="No." <> '';
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category8;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 78      ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 ESP=Aprobaciones];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 ESP=Permite ver una lista de los registros en espera de aprobaci¢n. Por ejemplo, puede ver quin ha solicitado la aprobaci¢n del registro, cu ndo se envi¢ y la fecha de vencimiento de la aprobaci¢n.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=Approvals;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 WorkflowsEntriesBuffer@1000 : Record 832;
                               BEGIN
                                 WorkflowsEntriesBuffer.RunWorkflowEntriesPage(RECORDID,DATABASE::"Sales Header","Document Type","No.");
                               END;
                                }
      { 63      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ESP=C&omentarios];
                      ToolTipML=[ENU=View or add comments for the record.;
                                 ESP=Permite ver o agregar comentarios para el registro.];
                      ApplicationArea=#Comments;
                      RunObject=Page 67;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category8 }
      { 11      ;2   ;Action    ;
                      Name=AssemblyOrders;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[ENU=Assembly Orders;
                                 ESP=Pedidos de ensamblado];
                      ToolTipML=[ENU="View ongoing assembly orders related to the sales order. ";
                                 ESP="Permite ver pedidos de ensamblado en curso relacionados con el pedido de ventas. "];
                      ApplicationArea=#Assembly;
                      Image=AssemblyOrder;
                      OnAction=VAR
                                 AssembleToOrderLink@1000 : Record 904;
                               BEGIN
                                 AssembleToOrderLink.ShowAsmOrders(Rec);
                               END;
                                }
      { 106     ;2   ;Action    ;
                      Name=DocAttach;
                      CaptionML=[ENU=Attachments;
                                 ESP=Datos adjuntos];
                      ToolTipML=[ENU=Add a file as an attachment. You can attach images as well as documents.;
                                 ESP=Permite agregar un archivo como adjunto. Puede adjuntar im genes y documentos.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Attach;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 DocumentAttachmentDetails@1000 : Page 1173;
                                 RecRef@1001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentAttachmentDetails.OpenForRecRef(RecRef);
                                 DocumentAttachmentDetails.RUNMODAL;
                               END;
                                }
      { 79      ;1   ;ActionGroup;
                      Name=ActionGroupCRM;
                      CaptionML=[ENU=Dynamics 365 for Sales;
                                 ESP=Dynamics 365 for Sales];
                      Visible=CRMIntegrationEnabled }
      { 71      ;2   ;Action    ;
                      Name=CRMGoToSalesOrder;
                      CaptionML=[ENU=Sales Order;
                                 ESP=Pedido venta];
                      ToolTipML=[ENU=View the selected sales order.;
                                 ESP=Permite ver el pedido de venta seleccionado.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=CRMIntegrationEnabled AND CRMIsCoupledToRecord;
                      Image=CoupledOrder;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.ShowCRMEntityFromRecordID(RECORDID);
                               END;
                                }
      { 13      ;1   ;ActionGroup;
                      CaptionML=[ENU=Documents;
                                 ESP=Documentos];
                      Image=Documents }
      { 64      ;2   ;Action    ;
                      CaptionML=[ENU=S&hipments;
                                 ESP=&Env¡os];
                      ToolTipML=[ENU=View related posted sales shipments.;
                                 ESP=Permite ver todos los albaranes de venta relacionados.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 142;
                      RunPageView=SORTING(Order No.);
                      RunPageLink=Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Shipment;
                      PromotedCategory=Category12 }
      { 65      ;2   ;Action    ;
                      CaptionML=[ENU=Invoices;
                                 ESP=Facturas];
                      ToolTipML=[ENU=View a list of ongoing sales invoices for the order.;
                                 ESP=Permite ver una lista de facturas de venta en curso para el pedido.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 143;
                      RunPageView=SORTING(Order No.);
                      RunPageLink=Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Invoice;
                      PromotedCategory=Category12 }
      { 15      ;1   ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 ESP=Almacn];
                      Image=Warehouse }
      { 150     ;2   ;Action    ;
                      CaptionML=[ENU=In&vt. Put-away/Pick Lines;
                                 ESP=L¡neas ubicac./ pic&k exist.];
                      ToolTipML=[ENU=View items that are inbound or outbound on inventory put-away or inventory pick documents for the transfer order.;
                                 ESP=Permite ver los productos que entran o salen de la ubicaci¢n del inventario o documentos de picking de inventario para el pedido de transferencia.];
                      ApplicationArea=#Warehouse;
                      RunObject=Page 5774;
                      RunPageView=SORTING(Source Document,Source No.,Location Code);
                      RunPageLink=Source Document=CONST(Sales Order),
                                  Source No.=FIELD(No.);
                      Image=PickLines }
      { 168     ;2   ;Action    ;
                      CaptionML=[ENU=Warehouse Shipment Lines;
                                 ESP=L¡neas env¡o almacn];
                      ToolTipML=[ENU=View ongoing warehouse shipments for the document, in advanced warehouse configurations.;
                                 ESP=Permite ver env¡os de almacn en curso para el documento, en configuraciones avanzadas de almacn.];
                      ApplicationArea=#Warehouse;
                      RunObject=Page 7341;
                      RunPageView=SORTING(Source Type,Source Subtype,Source No.,Source Line No.);
                      RunPageLink=Source Type=CONST(37),
                                  Source Subtype=FIELD(Document Type),
                                  Source No.=FIELD(No.);
                      Image=ShipmentLines }
      { 17      ;1   ;ActionGroup;
                      CaptionML=[ENU=Prepayment;
                                 ESP=Prepago];
                      Image=Prepayment }
      { 234     ;2   ;Action    ;
                      Name=PagePostedSalesPrepaymentInvoices;
                      CaptionML=[ENU=Prepa&yment Invoices;
                                 ESP=&Facturas prepago];
                      ToolTipML=[ENU="View related posted sales invoices that involve a prepayment. ";
                                 ESP="Permite ver facturas de ventas relacionadas que incluyen un prepago. "];
                      ApplicationArea=#Prepayments;
                      RunObject=Page 143;
                      RunPageView=SORTING(Prepayment Order No.);
                      RunPageLink=Prepayment Order No.=FIELD(No.);
                      Image=PrepaymentInvoice }
      { 235     ;2   ;Action    ;
                      Name=PagePostedSalesPrepaymentCrMemos;
                      CaptionML=[ENU=Prepayment Credi&t Memos;
                                 ESP=&Abonos prepago];
                      ToolTipML=[ENU="View related posted sales credit memos that involve a prepayment. ";
                                 ESP="Permite ver abonos de ventas relacionadas que incluyen un prepago. "];
                      ApplicationArea=#Prepayments;
                      RunObject=Page 144;
                      RunPageView=SORTING(Prepayment Order No.);
                      RunPageLink=Prepayment Order No.=FIELD(No.);
                      Image=PrepaymentCreditMemo }
      { 108     ;1   ;ActionGroup;
                      CaptionML=[ENU=History;
                                 ESP=Historial] }
      { 110     ;2   ;Action    ;
                      Name=PageInteractionLogEntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Interaction Log E&ntries;
                                 ESP=&Movs. reg. interacci¢n];
                      ToolTipML=[ENU=View a list of interaction log entries related to this document.;
                                 ESP=Consulte una lista de movimientos de registro de interacci¢n relacionados con este documento.];
                      ApplicationArea=#Suite;
                      Image=InteractionLog;
                      PromotedCategory=Category10;
                      OnAction=BEGIN
                                 ShowInteractionLogEntries;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 47      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 ESP=Aprobaci¢n] }
      { 43      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 ESP=Aprobar];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 ESP=Aprueba los cambios solicitados.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 41      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 ESP=Rechazar];
                      ToolTipML=[ENU=Reject the approval request.;
                                 ESP=Rechaza la solicitud de aprobaci¢n.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 39      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 ESP=Delegar];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 ESP=Delega la aprobaci¢n a un aprobador sustituto.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 ESP=Comentarios];
                      ToolTipML=[ENU=View or add comments for the record.;
                                 ESP=Permite ver o agregar comentarios para el registro.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 21      ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 ESP=Lanzar];
                      Image=ReleaseDoc }
      { 133     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 ESP=Lan&zar];
                      ToolTipML=[ENU=Release the document to the next stage of processing. When a document is released, it will be included in all availability calculations from the expected receipt date of the items. You must reopen the document before you can make changes to it.;
                                 ESP=Lance el documento a la siguiente etapa de procesamiento. Cuando se lanza un documento, este se incluir  en todos los c lculos de disponibilidad a partir de la fecha de recepci¢n esperada de los productos. Debe volver a abrir el documento antes de realizar cambios en l.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ReleaseSalesDoc@1000 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 134     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 ESP=&Volver a abrir];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.;
                                 ESP=Permite volver a abrir el documento para cambiarlo una vez que se haya aprobado. Los documentos aprobados tienen el estado Lanzado y se deben abrir para poder cambiarlos.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=Status <> Status::Open;
                      Image=ReOpen;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ReleaseSalesDoc@1001 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 66      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Acci&ones];
                      Image=Action }
      { 1100090 ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      CaptionML=[ENU=Calculate &Inv. and Pmt. Discounts;
                                 ESP=Calcular dtos. &factura y P.P.];
                      ToolTipML=[ENU=Update the lines with any payment discount that is specified in the related payment terms.;
                                 ESP=Actualiza las l¡neas con cualquier descuento por pronto pago especificado en los trminos de pago relacionados.];
                      ApplicationArea=#Basic,#Suite;
                      Image=CalculateDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 SalesCalcDiscountByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 102     ;2   ;ActionGroup;
                      CaptionML=[ENU=Create Purchase Document;
                                 ESP=Crear documento de compra];
                      ToolTipML=[ENU=Create a new purchase document so you can buy items from a vendor.;
                                 ESP=Permite crear un nuevo documento de compra para que pueda comprar productos a un proveedor.];
                      Image=NewPurchaseInvoice }
      { 104     ;3   ;Action    ;
                      Name=CreatePurchaseOrder;
                      CaptionML=[ENU=Create Purchase Orders;
                                 ESP=Crear pedidos de compra];
                      ToolTipML=[ENU=Create one or more new purchase orders to buy the items that are required by this sales document, minus any quantity that is already available.;
                                 ESP=Permite crear uno o varios nuevos pedidos de compra para comprar los productos solicitados en este documento de venta, menos cualquier cantidad que ya est disponible.];
                      ApplicationArea=#Suite;
                      Promoted=No;
                      PromotedIsBig=Yes;
                      Image=Document;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 PurchDocFromSalesDoc@1000 : Codeunit 1314;
                               BEGIN
                                 PurchDocFromSalesDoc.CreatePurchaseOrder(Rec);
                               END;
                                }
      { 87      ;3   ;Action    ;
                      Name=CreatePurchaseInvoice;
                      CaptionML=[ENU=Create Purchase Invoice;
                                 ESP=Crear factura de compra];
                      ToolTipML=[ENU=Create a new purchase invoice to buy all the items that are required by the sales document, even if some of the items are already available.;
                                 ESP=Permite crear una nueva factura de compra para comprar todos los productos solicitados en el documento de venta, aunque algunos de los productos ya estn disponibles.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=No;
                      PromotedIsBig=Yes;
                      Image=NewPurchaseInvoice;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 SelectedSalesLine@1001 : Record 37;
                                 PurchDocFromSalesDoc@1000 : Codeunit 1314;
                               BEGIN
                                 CurrPage.SalesLines.PAGE.SETSELECTIONFILTER(SelectedSalesLine);
                                 PurchDocFromSalesDoc.CreatePurchaseInvoice(Rec,SelectedSalesLine);
                               END;
                                }
      { 167     ;2   ;Action    ;
                      Name=GetRecurringSalesLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Recurring Sales Lines;
                                 ESP=Obtener l¡neas de venta peri¢dicas];
                      ToolTipML=[ENU=Insert sales document lines that you have set up for the customer as recurring. Recurring sales lines could be for a monthly replenishment order or a fixed freight expense.;
                                 ESP=Permite insertar las l¡neas del documento de venta que se configuraron para el cliente como peri¢dicas. Las l¡neas de venta peri¢dicas pueden ser un pedido de reposici¢n mensual o un gasto de flete fijo.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=CustomerCode;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 StdCustSalesCode@1000 : Record 172;
                               BEGIN
                                 StdCustSalesCode.InsertSalesLines(Rec);
                               END;
                                }
      { 68      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ESP=Copiar l¡neas];
                      ToolTipML=[ENU=Copy document lines and header information from another sales document to this document. You can copy a posted sales invoice into a new sales invoice to quickly create a similar document.;
                                 ESP=Copia las l¡neas del documento y la informaci¢n de cabecera de otro documento de venta en este. Una factura de venta registrada se puede copiar en una nueva factura de venta para crear un documento similar con rapidez.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled="No." <> '';
                      PromotedIsBig=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 154     ;2   ;Action    ;
                      Name=MoveNegativeLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Move Negative Lines;
                                 ESP=Mover l¡neas negativas];
                      ToolTipML=[ENU=Prepare to create a replacement sales order in a sales return process.;
                                 ESP=Preparar un pedido de venta de reposici¢n en un proceso de devoluci¢n de venta.];
                      ApplicationArea=#Basic,#Suite;
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegSalesLines);
                                 MoveNegSalesLines.SetSalesHeader(Rec);
                                 MoveNegSalesLines.RUNMODAL;
                                 MoveNegSalesLines.ShowDocument;
                               END;
                                }
      { 196     ;2   ;Action    ;
                      Name=Archive Document;
                      CaptionML=[ENU=Archi&ve Document;
                                 ESP=&Archivar documento];
                      ToolTipML=[ENU=Send the document to the archive, for example because it is too soon to delete it. Later, you delete or reprocess the archived document.;
                                 ESP="Env¡e el documento al archivo; por ejemplo, porque es demasiado pronto para eliminarlo. Despus, elimina o reprocesa el documento archivado."];
                      ApplicationArea=#Suite;
                      Image=Archive;
                      OnAction=BEGIN
                                 ArchiveManagement.ArchiveSalesDocument(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 204     ;2   ;Action    ;
                      AccessByPermission=TableData 410=R;
                      CaptionML=[ENU=Send IC Sales Order;
                                 ESP=Env¡o ped. venta IC];
                      ToolTipML=[ENU=Send the sales order to the intercompany outbox or directly to the intercompany partner if automatic transaction sending is enabled.;
                                 ESP=Env¡a el pedido de venta a la bandeja de salida de empresas vinculada o directamente al socio de empresas vinculadas si est  habilitado el env¡o autom tico de transacciones.];
                      ApplicationArea=#Intercompany;
                      Image=IntercompanyOrder;
                      OnAction=VAR
                                 ICInOutboxMgt@1000 : Codeunit 427;
                                 ApprovalsMgmt@1003 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   ICInOutboxMgt.SendSalesDoc(Rec,FALSE);
                               END;
                                }
      { 69      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 ESP=Documento entrante];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 60      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 ESP=Ver documento entrante];
                      ToolTipML=[ENU=View any incoming document records and file attachments that exist for the entry or document.;
                                 ESP=Permite ver los registros de documentos entrantes y archivos adjuntos que existen para el movimiento o el documento.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 57      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 ESP=Seleccionar documento entrante];
                      ToolTipML=[ENU=Select an incoming document record and file attachment that you want to link to the entry or document.;
                                 ESP=Permite seleccionar un registro de documentos entrantes y un archivo adjunto que desee vincular al movimiento o al documento.];
                      ApplicationArea=#Basic,#Suite;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 55      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 ESP=Crear documento entrante desde archivo];
                      ToolTipML=[ENU=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.;
                                 ESP=Permite crear un registro de documentos entrantes al seleccionar un archivo que se ha de adjuntar y luego vincular el registro de documentos entrantes al movimiento o al documento.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromSalesDocument(Rec);
                               END;
                                }
      { 53      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[ENU=Remove Incoming Document;
                                 ESP=Eliminar documento entrante];
                      ToolTipML=[ENU=Remove any incoming document records and file attachments.;
                                 ESP=Elimina cualquier registro de documentos entrantes y los archivos adjuntos.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(TRUE);
                               END;
                                }
      { 23      ;1   ;ActionGroup;
                      CaptionML=[ENU=Plan;
                                 ESP=Planificar];
                      Image=Planning }
      { 197     ;2   ;Action    ;
                      Name=OrderPromising;
                      AccessByPermission=TableData 99000880=R;
                      CaptionML=[ENU=Order &Promising;
                                 ESP=Comprom&iso entrega];
                      ToolTipML=[ENU=Calculate the shipment and delivery dates based on the item's known and expected availability dates, and then promise the dates to the customer.;
                                 ESP=Calcular las fechas de env¡o y entrega seg£n las fechas de disponibilidad conocidas y previstas del art¡culo y, despus, comprometer dichas fechas ante el cliente.];
                      ApplicationArea=#OrderPromising;
                      Image=OrderPromising;
                      OnAction=VAR
                                 OrderPromisingLine@1000 : TEMPORARY Record 99000880;
                               BEGIN
                                 OrderPromisingLine.SETRANGE("Source Type","Document Type");
                                 OrderPromisingLine.SETRANGE("Source ID","No.");
                                 PAGE.RUNMODAL(PAGE::"Order Promising Lines",OrderPromisingLine);
                               END;
                                }
      { 248     ;2   ;Action    ;
                      CaptionML=[ENU=Demand Overview;
                                 ESP=Panorama de demanda];
                      ToolTipML=[ENU=Get an overview of demand for your items when planning sales, production, jobs, or service management and when they will be available.;
                                 ESP=Obtener una visi¢n general de la demanda de sus productos al planificar las ventas, la producci¢n, los trabajos o la gesti¢n de servicios y sobre cu ndo estar n disponibles.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Forecast;
                      OnAction=VAR
                                 DemandOverview@1000 : Page 5830;
                               BEGIN
                                 DemandOverview.SetCalculationParameter(TRUE);
                                 DemandOverview.Initialize(0D,1,"No.",'','');
                                 DemandOverview.RUNMODAL;
                               END;
                                }
      { 121     ;2   ;Action    ;
                      CaptionML=[ENU=Pla&nning;
                                 ESP=Plani&ficaci¢n];
                      ToolTipML=[ENU=Open a tool for manual supply planning that displays all new demand along with availability information and suggestions for supply. It provides the visibility and tools needed to plan for demand from sales lines and component lines and then create different types of supply orders directly.;
                                 ESP=Abrir una herramienta para la programaci¢n manual de suministros en donde se puede ver toda la nueva demanda junto con informaci¢n acerca de la disponibilidad y sugerencias sobre el suministro. Proporciona la perspectiva y las herramientas necesarias para programar la demanda de l¡neas de venta y l¡neas de componentes y crear despus directamente diferentes tipos de pedidos de suministros.];
                      ApplicationArea=#Planning;
                      Image=Planning;
                      OnAction=VAR
                                 SalesPlanForm@1001 : Page 99000883;
                               BEGIN
                                 SalesPlanForm.SetSalesOrder("No.");
                                 SalesPlanForm.RUNMODAL;
                               END;
                                }
      { 25      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 ESP=Aprobaci¢n solic.];
                      Image=SendApprovalRequest }
      { 250     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 ESP=Enviar solicitud a&probaci¢n];
                      ToolTipML=[ENU=Request approval of the document.;
                                 ESP=Permite solicitar la aprobaci¢n del documento.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist AND CanRequestApprovalForFlow;
                      PromotedIsBig=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckSalesApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendSalesDocForApproval(Rec);
                               END;
                                }
      { 251     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 ESP=&Cancelar solicitud aprobaci¢n];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 ESP=Cancela la solicitud de aprobaci¢n.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord OR CanCancelApprovalForFlow;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category9;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                                 WorkflowWebhookMgt@1000 : Codeunit 1543;
                               BEGIN
                                 ApprovalsMgmt.OnCancelSalesApprovalRequest(Rec);
                                 WorkflowWebhookMgt.FindAndCancel(RECORDID);
                               END;
                                }
      { 118     ;2   ;ActionGroup;
                      CaptionML=[ENU=Flow;
                                 ESP=Flujo de trabajo];
                      Image=Flow }
      { 117     ;3   ;Action    ;
                      Name=CreateFlow;
                      CaptionML=[ENU=Create a Flow;
                                 ESP=Crear un flujo de trabajo];
                      ToolTipML=[ENU=Create a new Flow from a list of relevant Flow templates.;
                                 ESP=Crea un nuevo flujo de trabajo a partir de una lista de plantillas de flujo de trabajo pertinentes.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsSaas;
                      Image=Flow;
                      PromotedCategory=Category9;
                      OnAction=VAR
                                 FlowServiceManagement@1001 : Codeunit 6400;
                                 FlowTemplateSelector@1000 : Page 6400;
                               BEGIN
                                 // Opens page 6400 where the user can use filtered templates to create new flows.
                                 FlowTemplateSelector.SetSearchText(FlowServiceManagement.GetSalesTemplateFilter);
                                 FlowTemplateSelector.RUN;
                               END;
                                }
      { 120     ;3   ;Action    ;
                      Name=SeeFlows;
                      CaptionML=[ENU=See my Flows;
                                 ESP=Ver mis flujos de trabajo];
                      ToolTipML=[ENU=View and configure Flows that you created.;
                                 ESP=Permite ver y configurar los flujos de trabajo que ha creado.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 6401;
                      Promoted=Yes;
                      Image=Flow;
                      PromotedCategory=Category9 }
      { 3       ;1   ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 ESP=Almacn];
                      Image=Warehouse }
      { 148     ;2   ;Action    ;
                      AccessByPermission=TableData 7342=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Inventor&y Put-away/Pick;
                                 ESP=Crear &ubicac./ pick. inventario];
                      ToolTipML=[ENU=Create an inventory put-away or inventory pick to handle items on the document according to a basic warehouse configuration that does not require warehouse receipt or shipment documents.;
                                 ESP=Crear una ubicaci¢n de inventario o un picking de existencias para gestionar los productos del documento, de acuerdo con una configuraci¢n b sica de almacn que no requiera documentos de recepci¢n o env¡o de almacn.];
                      ApplicationArea=#Warehouse;
                      Promoted=Yes;
                      Image=CreateInventoryPickup;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateInvtPutAwayPick;

                                 IF NOT FIND('=><') THEN
                                   INIT;
                               END;
                                }
      { 149     ;2   ;Action    ;
                      AccessByPermission=TableData 7320=R;
                      CaptionML=[ENU=Create &Warehouse Shipment;
                                 ESP=Crear env¡o de &almacn];
                      ToolTipML=[ENU=Create a warehouse shipment to start a pick a ship process according to an advanced warehouse configuration.;
                                 ESP=Cree un env¡o de almacn para iniciar un proceso de picking y env¡o seg£n una configuraci¢n avanzada del almacn.];
                      ApplicationArea=#Warehouse;
                      Image=NewShipment;
                      OnAction=VAR
                                 GetSourceDocOutbound@1001 : Codeunit 5752;
                               BEGIN
                                 GetSourceDocOutbound.CreateFromSalesOrder(Rec);

                                 IF NOT FIND('=><') THEN
                                   INIT;
                               END;
                                }
      { 73      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ESP=&Registro];
                      Image=Post }
      { 75      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=P&ost;
                                 ESP=&Registrar];
                      ToolTipML=[ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                                 ESP=Finaliza el documento o el diario registrando los importes y las cantidades en las cuentas relacionadas de los libros de su empresa.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)",NavigateAfterPost::"Posted Document");
                               END;
                                }
      { 19      ;2   ;Action    ;
                      Name=PostAndNew;
                      ShortCutKey=Shift+F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and New;
                                 ESP=Registrar y nuevo];
                      ToolTipML=[ENU=Post the sales document and create a new, empty one.;
                                 ESP=Registrar el documento de ventas y crear un nuevo vac¡o.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)",NavigateAfterPost::"New Document");
                               END;
                                }
      { 29      ;2   ;Action    ;
                      Name=PostAndSend;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and Send;
                                 ESP=Registrar y enviar];
                      ToolTipML=[ENU=Finalize and prepare to send the document according to the customer's sending profile, such as attached to an email. The Send document to window opens first so you can confirm or select a sending profile.;
                                 ESP=Permite finalizar y preparar el documento para enviarlo seg£n el perfil que cuenta con las preferencias de env¡o del cliente, por ejemplo, adjunto en un correo electr¢nico. La ventana "Enviar documento a" se abre primero para que se pueda confirmar o seleccionar un perfil de env¡o.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=PostMail;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post and Send",NavigateAfterPost::Nowhere);
                               END;
                                }
      { 74      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 ESP=Informe prueba];
                      ToolTipML=[ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                                 ESP=Permite ver un informe de prueba para poder encontrar y corregir cualquier error antes de proceder al registro propiamente dicho del diario o el documento.];
                      ApplicationArea=#Basic,#Suite;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      CaptionML=[ENU=Remove From Job Queue;
                                 ESP=Quitar de cola de proyecto];
                      ToolTipML=[ENU=Remove the scheduled processing of this record from the job queue.;
                                 ESP=Permite quitar el procesamiento programado de este registro de la cola de proyectos.];
                      ApplicationArea=#All;
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 51      ;2   ;Action    ;
                      Name=PreviewPosting;
                      CaptionML=[ENU=Preview Posting;
                                 ESP=Vista previa de registro];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 ESP=Permite revisar los diferentes tipos de movimientos que se crear n al registrar el documento o el diario.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=ViewPostedOrder;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowPreview;
                               END;
                                }
      { 52      ;2   ;Action    ;
                      Name=ProformaInvoice;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Pro Forma Invoice;
                                 ESP=Factura proforma];
                      ToolTipML=[ENU=View or print the pro forma sales invoice.;
                                 ESP=Permite ver o imprimir la factura de venta proforma.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 DocPrint.PrintProformaSalesInvoice(Rec);
                               END;
                                }
      { 236     ;2   ;ActionGroup;
                      CaptionML=[ENU=Prepa&yment;
                                 ESP=&Prepago];
                      Image=Prepayment }
      { 231     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Prepayment &Test Report;
                                 ESP=Informe prue&ba prepago];
                      ToolTipML=[ENU="Preview the prepayment transactions that will results from posting the sales document as invoiced. ";
                                 ESP="Vista previa de las transacciones de prepago que resultan del registro del documento de ventas seg£n lo facturado. "];
                      ApplicationArea=#Prepayments;
                      Image=PrepaymentSimulation;
                      OnAction=BEGIN
                                 ReportPrint.PrintSalesHeaderPrepmt(Rec);
                               END;
                                }
      { 232     ;3   ;Action    ;
                      Name=PostPrepaymentInvoice;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post Prepayment &Invoice;
                                 ESP=&Registrar factura prepago];
                      ToolTipML=[ENU="Post the specified prepayment information. ";
                                 ESP="Registrar la informaci¢n de prepago especificada. "];
                      ApplicationArea=#Prepayments;
                      Image=PrepaymentPost;
                      OnAction=VAR
                                 SalesPostYNPrepmt@1000 : Codeunit 443;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   SalesPostYNPrepmt.PostPrepmtInvoiceYN(Rec,FALSE);
                               END;
                                }
      { 237     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and Print Prepmt. Invoic&e;
                                 ESP=&Registrar e imprimir factura prepago];
                      ToolTipML=[ENU="Post the specified prepayment information and print the related report. ";
                                 ESP="Registrar la informaci¢n de prepago especificada e imprimir el informe correspondiente. "];
                      ApplicationArea=#Prepayments;
                      Image=PrepaymentPostPrint;
                      OnAction=VAR
                                 SalesPostYNPrepmt@1000 : Codeunit 443;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   SalesPostYNPrepmt.PostPrepmtInvoiceYN(Rec,TRUE);
                               END;
                                }
      { 142     ;3   ;Action    ;
                      Name=PreviewPrepmtInvoicePosting;
                      CaptionML=[ENU=Preview Prepmt. Invoice Posting;
                                 ESP=Vista previa de contabilizaci¢n de facturas prepago];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the prepayment invoice.;
                                 ESP=Permite revisar los diferentes tipos de movimientos que se crear n al registrar la factura prepago.];
                      ApplicationArea=#Prepayments;
                      Image=ViewPostedOrder;
                      OnAction=BEGIN
                                 ShowPrepmtInvoicePreview;
                               END;
                                }
      { 233     ;3   ;Action    ;
                      Name=PostPrepaymentCreditMemo;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post Prepayment &Credit Memo;
                                 ESP=&Registrar abono prepago];
                      ToolTipML=[ENU=Create and post a credit memo for the specified prepayment information.;
                                 ESP=Crear y registrar un abono para la informaci¢n de prepago especificada.];
                      ApplicationArea=#Prepayments;
                      Image=PrepaymentPost;
                      OnAction=VAR
                                 SalesPostYNPrepmt@1000 : Codeunit 443;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   SalesPostYNPrepmt.PostPrepmtCrMemoYN(Rec,FALSE);
                               END;
                                }
      { 238     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and Print Prepmt. Cr. Mem&o;
                                 ESP=Registrar e imprimir abon&o prepago];
                      ToolTipML=[ENU=Create and post a credit memo for the specified prepayment information and print the related report.;
                                 ESP=Crear y registrar un abono para la informaci¢n de prepago especificada e imprimir el informe relacionado.];
                      ApplicationArea=#Prepayments;
                      Image=PrepaymentPostPrint;
                      OnAction=VAR
                                 SalesPostYNPrepmt@1000 : Codeunit 443;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   SalesPostYNPrepmt.PostPrepmtCrMemoYN(Rec,TRUE);
                               END;
                                }
      { 140     ;3   ;Action    ;
                      Name=PreviewPrepmtCrMemoPosting;
                      CaptionML=[ENU=Preview Prepmt. Cr. Memo Posting;
                                 ESP=Vista previa contabilizaci¢n notas crdito prepago];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the prepayment credit memo.;
                                 ESP=Permite revisar los diferentes tipos de movimientos que se crear n al registrar el abono prepago.];
                      ApplicationArea=#Prepayments;
                      Image=ViewPostedOrder;
                      OnAction=BEGIN
                                 ShowPrepmtCrMemoPreview;
                               END;
                                }
      { 223     ;1   ;ActionGroup;
                      CaptionML=[ENU=&Print;
                                 ESP=&Imprimir];
                      Image=Print }
      { 225     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Work Order;
                                 ESP=Solicitud trabajo];
                      ToolTipML=[ENU=Prepare to registers actual item quantities or time used in connection with the sales order. For example, the document can be used by staff who perform any kind of processing work in connection with the sales order. It can also be exported to Excel if you need to process the sales line data further.;
                                 ESP=Preparar para registrar cantidades de producto reales o de tiempo empleados en relaci¢n con el pedido de venta. Por ejemplo, el personal que realice cualquier tipo de trabajo de procesamiento relacionado con el pedido de venta puede registrar estos aspectos en este documento. Tambin se puede exportar a Excel si desea realizar un posterior procesamiento de los datos de la l¡nea de ventas.];
                      ApplicationArea=#Manufacturing;
                      Image=Print;
                      OnAction=BEGIN
                                 DocPrint.PrintSalesOrder(Rec,Usage::"Work Order");
                               END;
                                }
      { 5       ;2   ;Action    ;
                      CaptionML=[ENU=Pick Instruction;
                                 ESP=Instrucci¢n picking];
                      ToolTipML=[ENU=Print a picking list that shows which items to pick and ship for the sales order. If an item is assembled to order, then the report includes rows for the assembly components that must be picked. Use this report as a pick instruction to employees in charge of picking sales items or assembly components for the sales order.;
                                 ESP=Imprimir una lista de selecci¢n que muestra qu elementos recoger y enviar para la orden de venta. Si un art¡culo se ensambla para un pedido, el informe incluye filas para los componentes del ensamblado que se deben recoger. Utilice este informe como una instrucci¢n de selecci¢n para los empleados a cargo de recoger art¡culos de ventas o componentes del ensamblado para el pedido de ventas.];
                      ApplicationArea=#Warehouse;
                      Image=Print;
                      OnAction=BEGIN
                                 DocPrint.PrintSalesOrder(Rec,Usage::"Pick Instruction");
                               END;
                                }
      { 31      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Order Confirmation;
                                 ESP=&Confirmaci¢n pedido];
                      Image=Email }
      { 33      ;2   ;Action    ;
                      Name=SendEmailConfirmation;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Email Confirmation;
                                 ESP=Enviar confirmaci¢n por correo elect.];
                      ToolTipML=[ENU=Send a sales order confirmation by email. The attachment is sent as a .pdf.;
                                 ESP=Env¡a una confirmaci¢n de pedido de venta por correo electr¢nico. El archivo adjunto se env¡a en formato .pdf.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Category11;
                      OnAction=BEGIN
                                 DocPrint.EmailSalesHeader(Rec);
                               END;
                                }
      { 96      ;2   ;ActionGroup;
                      Visible=FALSE }
      { 224     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print Confirmation;
                                 ESP=Imprimir confirmaci¢n];
                      ToolTipML=[ENU=Print a sales order confirmation.;
                                 ESP=Imprime una confirmaci¢n de pedido de venta.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsOfficeHost;
                      Image=Print;
                      PromotedCategory=Category11;
                      OnAction=BEGIN
                                 DocPrint.PrintSalesOrder(Rec,Usage::"Order Confirmation");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                           ESP=Especifica el n£mero de la entrada o el registro relacionado, seg£n la serie numrica especificada.];
                ApplicationArea=#All;
                SourceExpr="No.";
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 98  ;2   ;Field     ;
                CaptionML=[ENU=Customer No.;
                           ESP=N.§ de cliente];
                ToolTipML=[ENU=Specifies the number of the customer who will receive the products and be billed by default.;
                           ESP=Especifica el n£mero del cliente que recibir  los productos y al que se facturar  de forma predeterminada.];
                ApplicationArea=#Basic,#Suite;
                NotBlank=Yes;
                SourceExpr="Sell-to Customer No.";
                Importance=Additional;
                OnValidate=BEGIN
                             SelltoCustomerNoOnAfterValidate(Rec,xRec);
                             CurrPage.UPDATE;
                           END;
                            }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Customer Name;
                           ESP=Nombre del cliente];
                ToolTipML=[ENU=Specifies the name of the customer who will receive the products and be billed by default.;
                           ESP=Especifica el nombre del cliente que recibir  los productos y al que se facturar  de forma predeterminada.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Customer Name";
                OnValidate=BEGIN
                             SelltoCustomerNoOnAfterValidate(Rec,xRec);

                             IF ApplicationAreaMgmtFacade.IsFoundationEnabled THEN
                               SalesCalcDiscountByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ShowMandatory=TRUE }

    { 114 ;2   ;Group     ;
                Visible=ShowQuoteNo;
                GroupType=Group }

    { 243 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the sales quote that the sales order was created from. You can track the number to sales quote documents that you have printed, saved, or emailed.;
                           ESP=Especifica el n£mero de la oferta de venta a partir de la cual se cre¢ el pedido de venta. Puede hacer un seguimiento del n£mero y ver los documentos de oferta de venta que imprimi¢, guard¢ o envi¢ por correo electr¢nico.];
                ApplicationArea=#All;
                SourceExpr="Quote No." }

    { 100 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies additional posting information for the document. After you post the document, the description can add detail to vendor and customer ledger entries.;
                           ESP=Especifica la informaci¢n de registro adicional del documento. Despus de registrar el documento, la descripci¢n puede agregar detalles a los movimientos de cliente y proveedor.];
                ApplicationArea=#Suite;
                SourceExpr="Posting Description";
                Visible=FALSE }

    { 190 ;2   ;Group     ;
                CaptionML=[ENU=Sell-to;
                           ESP=Direcci¢n venta];
                GroupType=Group }

    { 81  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ESP=Direcci¢n];
                ToolTipML=[ENU=Specifies the address where the customer is located.;
                           ESP=Especifica la direcci¢n donde reside el cliente.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address";
                Importance=Additional;
                QuickEntry=FALSE }

    { 83  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ESP=Direcci¢n 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ESP=Especifica informaci¢n adicional sobre la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address 2";
                Importance=Additional;
                QuickEntry=FALSE }

    { 86  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ESP=Poblaci¢n];
                ToolTipML=[ENU=Specifies the city of the customer on the sales document.;
                           ESP=Especifica la ciudad del cliente en el documento de ventas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to City";
                Importance=Additional;
                QuickEntry=FALSE }

    { 123 ;3   ;Group     ;
                Visible=IsSellToCountyVisible;
                GroupType=Group }

    { 125 ;4   ;Field     ;
                CaptionML=[ENU=County;
                           ESP=Provincia];
                ToolTipML=[ENU=Specifies the state, province or county of the address.;
                           ESP=Especifica el estado, la provincia o la comarca de la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to County";
                Importance=Additional;
                QuickEntry=FALSE }

    { 115 ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ESP=C¢digo postal];
                ToolTipML=[ENU=Specifies the postal code.;
                           ESP=Especifica el c¢digo postal.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Post Code";
                Importance=Additional;
                QuickEntry=FALSE }

    { 72  ;3   ;Field     ;
                CaptionML=[ENU=Country/Region Code;
                           ESP=C¢digo pa¡s/regi¢n];
                ToolTipML=[ENU=Specifies the country or region of the address.;
                           ESP=Especifica el pa¡s o la regi¢n de la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Country/Region Code";
                Importance=Additional;
                OnValidate=BEGIN
                             IsSellToCountyVisible := FormatAddress.UseCounty("Sell-to Country/Region Code");
                           END;

                QuickEntry=FALSE }

    { 157 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ESP=N§ contacto];
                ToolTipML=[ENU=Specifies the number of the contact that the sales document will be sent to.;
                           ESP=Especifica el n£mero del contacto a quien se enviar  el documento de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Contact No.";
                Importance=Additional;
                OnValidate=BEGIN
                             IF GETFILTER("Sell-to Contact No.") = xRec."Sell-to Contact No." THEN
                               IF "Sell-to Contact No." <> xRec."Sell-to Contact No." THEN
                                 SETRANGE("Sell-to Contact No.");
                           END;
                            }

    { 136 ;3   ;Field     ;
                CaptionML=[ENU=Phone No.;
                           ESP=N.§ de telfono];
                ToolTipML=[ENU=Specifies the phone number of the contact that the sales document will be sent to.;
                           ESP=Especifica el n£mero de telfono del contacto a quien se enviar  el documento de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Phone No.";
                Importance=Additional }

    { 128 ;3   ;Field     ;
                CaptionML=[ENU=Email;
                           ESP=Correo electr¢nico];
                ToolTipML=[ENU=Specifies the email address of the contact that the sales document will be sent to.;
                           ESP=Especifica la direcci¢n de correo electr¢nico del contacto a quien se enviar  el documento de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to E-Mail";
                Importance=Additional }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           ESP=Contacto];
                ToolTipML=[ENU=Specifies the name of the person to contact at the customer.;
                           ESP=Especifica el nombre de la persona de contacto del cliente.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Contact";
                Editable="Sell-to Customer No." <> '' }

    { 198 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of archived versions for this document.;
                           ESP=Especifica el n£mero de versiones archivadas de este documento.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. of Archived Versions";
                Importance=Additional }

    { 45  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the related document was created.;
                           ESP=Especifica la fecha en la que se cre¢ el documento correspondiente.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Additional }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the posting of the sales document will be recorded.;
                           ESP=Especifica la fecha en que se registrar  el registro del documento de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Importance=Promoted;
                OnValidate=BEGIN
                             SaveInvoiceDiscountAmount;
                           END;
                            }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the order was created.;
                           ESP=Especifica la fecha en la que se cre¢ el pedido.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order Date";
                Importance=Promoted;
                QuickEntry=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the related sales invoice must be paid.;
                           ESP=Especifica cu ndo se debe pagar la factura de venta correspondiente.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Importance=Promoted }

    { 135 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date that the customer has asked for the order to be delivered.;
                           ESP=Especifica la fecha en la que el cliente ha solicitado que se entregue el pedido.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Requested Delivery Date" }

    { 137 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date that you have promised to deliver the order, as a result of the Order Promising function.;
                           ESP=Especifica la fecha de entrega que acord¢ con el cliente como resultado de la funci¢n Compromiso entrega.];
                ApplicationArea=#OrderPromising;
                SourceExpr="Promised Delivery Date";
                Importance=Additional }

    { 155 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a document number that refers to the customer's or vendor's numbering system.;
                           ESP=Especifica un n£mero de documento que hace referencia al sistema de numeraci¢n del cliente o el proveedor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document No.";
                Importance=Promoted;
                ShowMandatory=ExternalDocNoMandatory }

    { 138 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's reference. The content will be printed on sales documents.;
                           ESP=Especifica la referencia del cliente. El contenido se imprimir  en los documentos de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Your Reference";
                Importance=Additional }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the salesperson who is assigned to the customer.;
                           ESP=Especifica el nombre del vendedor asignado al cliente.];
                ApplicationArea=#Suite;
                SourceExpr="Salesperson Code";
                Importance=Additional;
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;

                QuickEntry=FALSE }

    { 1148;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the campaign that the document is linked to.;
                           ESP=Especifica el n£mero de la campa¤a a la que est  vinculado el documento.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Campaign No.";
                Importance=Additional }

    { 245 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the opportunity that the sales quote is assigned to.;
                           ESP=Especifica el n£mero de la oportunidad a la que est  asignada la oferta de venta.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Opportunity No.";
                Importance=Additional }

    { 124 ;2   ;Field     ;
                AccessByPermission=TableData 5714=R;
                ToolTipML=[ENU=Specifies the code of the responsibility center, such as a distribution hub, that is associated with the involved user, company, customer, or vendor.;
                           ESP=Especifica el c¢digo del centro de responsabilidad, como, por ejemplo, un centro de distribuci¢n que est asociado al usuario, la empresa, el cliente o el proveedor relacionado.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 241 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user who is responsible for the document.;
                           ESP=Especifica el id. del usuario responsable del documento.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Assigned User ID";
                Importance=Additional }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of a job queue entry or task that handles the posting of sales orders.;
                           ESP=Especifica el estado de un movimiento de la cola de proyectos o de una tarea que controla el registro de los pedidos de venta.];
                ApplicationArea=#All;
                SourceExpr="Job Queue Status";
                Importance=Additional;
                Visible=JobQueuesUsed }

    { 129 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                           ESP=Especifica si el documento est  pendiente, en espera de aprobaci¢n, facturado para prepago o ha pasado a la etapa siguiente de procesamiento.];
                ApplicationArea=#Suite;
                SourceExpr=Status;
                Importance=Additional;
                QuickEntry=FALSE }

    { 1100288001;2;Field  ;
                Name=Documents;
                CaptionML=[ENU=Attachments;
                           ESP=Adjuntos];
                ToolTipML=[ENU=Specifies the number of attachments related to this document.;
                           ESP=Especifica el n£mero de adjuntos relacionados con este documento.];
                SourceExpr=NoOfDocuments;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              SalesMgt.ShowDocumentListForSalesDoc(Rec);
                            END;
                             }

    { 113 ;2   ;Group     ;
                CaptionML=[ENU=Work Description;
                           ESP=Descripci¢n del trabajo];
                GroupType=Group }

    { 116 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the products or service being offered.;
                           ESP=Especifica los productos o servicios que se ofrecen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=WorkDescription;
                Importance=Additional;
                MultiLine=Yes;
                OnValidate=BEGIN
                             SetWorkDescription(WorkDescription);
                           END;

                ShowCaption=No }

    { 58  ;1   ;Part      ;
                Name=SalesLines;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page46;
                Enabled="Sell-to Customer No." <> '';
                Editable=DynamicEditable;
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           ESP=Detalles factura];
                GroupType=Group }

    { 111 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency of amounts on the sales document.;
                           ESP=Especifica la divisa de los importes en el documento de venta.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             SalesCalcDiscountByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 SaveInvoiceDiscountAmount;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 131 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the Unit Price and Line Amount fields on document lines should be shown with or without VAT.;
                           ESP=Especifica si los campos Precio venta e Importe l¡nea en las l¡neas de documento deben mostrarse con o sin IVA.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 221 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the VAT specification of the involved customer or vendor to link transactions made for this record with the appropriate general ledger account according to the VAT posting setup.;
                           ESP=Indica la especificaci¢n de IVA del cliente o el proveedor relacionado para vincular las transacciones realizadas para este registro con la cuenta de contabilidad general correspondiente de acuerdo con la configuraci¢n de registro de IVA.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=BEGIN
                             IF ApplicationAreaMgmtFacade.IsFoundationEnabled THEN
                               SalesCalcDiscountByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;
                            }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount.;
                           ESP=Especifica una f¢rmula que calcula la fecha de vencimiento del pago, la fecha de descuento por pronto pago y el importe de descuento por pronto pago.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted;
                ShowMandatory=TRUE }

    { 105 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how to make payment, such as with bank transfer, cash, or check.;
                           ESP=Especifica c¢mo realizar el pago, por ejemplo transferencia bancaria, en efectivo o con cheque.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Method Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             UpdatePaymentService;
                           END;

                ShowMandatory=TRUE }

    { 112 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the transaction is related to trade with a third party within the EU.;
                           ESP=Especifica si la transacci¢n est  relacionada con comercio con terceros dentro de la UE.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="EU 3-Party Trade" }

    { 76  ;2   ;Group     ;
                Visible=PaymentServiceVisible;
                GroupType=Group }

    { 16  ;3   ;Field     ;
                Name=SelectedPayments;
                CaptionML=[ENU=Payment Service;
                           ESP=Servicio de pago];
                ToolTipML=[ENU=Specifies the online payment service, such as PayPal, that customers can use to pay the sales document.;
                           ESP=Especifica el servicio de pago en l¡nea, como PayPal, que los clientes pueden usar para pagar el documento de venta.];
                ApplicationArea=#All;
                SourceExpr=GetSelectedPaymentServicesText;
                Enabled=PaymentServiceEnabled;
                Editable=FALSE;
                MultiLine=Yes;
                OnAssistEdit=BEGIN
                               ChangePaymentServiceSetting;
                             END;
                              }

    { 84  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           ESP=Especifica el c¢digo de dimensi¢n del acceso directo 1, que es uno de los dos c¢digos de dimensi¢n globales que se configuran en la ventana Configuraci¢n de contabilidad.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 92  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           ESP=Especifica el c¢digo de dimensi¢n del acceso directo 2, que es uno de los dos c¢digos de dimensi¢n globales que se configuran en la ventana Configuraci¢n de contabilidad.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payment discount percentage granted if the customer pays on or before the date entered in the Pmt. Discount Date field.;
                           ESP=Especifica el porcentaje de descuento por pronto pago concedido si el cliente paga en o antes de la fecha introducida en el campo Fecha dto. P.P.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Discount %" }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the amount in the entry must be paid for a payment discount to be granted.;
                           ESP=Especifica cu ndo hay que pagar el importe del movimiento para conseguir un descuento por pronto pago.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional }

    { 27  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the direct-debit mandate that the customer has signed to allow direct debit collection of payments.;
                           ESP=Especifica la orden de domiciliaci¢n de adeudo directo que el cliente ha firmado para permitir realizar cobros por domiciliaci¢n de pagos.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Direct Debit Mandate ID" }

    { 1100009;2;Group     ;
                CaptionML=[ENU=SII Information;
                           ESP=Informaci¢n SII];
                GroupType=Group }

    { 1100008;3;Field     ;
                CaptionML=[ENU=Operation Description;
                           ESP=Descripci¢n de la operaci¢n];
                ToolTipML=[ENU=Specifies the Operation Description.;
                           ESP=Especifica la descripci¢n de la operaci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OperationDescription;
                MultiLine=Yes;
                OnValidate=VAR
                             SIIManagement@1100000 : Codeunit 10756;
                           BEGIN
                             SIIManagement.SplitOperationDescription(OperationDescription,"Operation Description","Operation Description 2");
                             VALIDATE("Operation Description");
                             VALIDATE("Operation Description 2");
                             MODIFY(TRUE);
                           END;
                            }

    { 1100007;3;Field     ;
                ToolTipML=[ENU=Specifies the Special Scheme Code.;
                           ESP=Especifica el c¢digo de esquema especial.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Special Scheme Code" }

    { 1100006;3;Field     ;
                ToolTipML=[ENU=Specifies the Invoice Type.;
                           ESP=Especifica el tipo de factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Invoice Type" }

    { 1100000;3;Field     ;
                ToolTipML=[ENU=Specifies the ID Type.;
                           ESP=Especifica el tipo de id.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="ID Type" }

    { 1100003;3;Field     ;
                ToolTipML=[ENU=Specifies the name of the company sucessor in connection with corporate restructuring.;
                           ESP=Especifica el nombre de la sucesora de la empresa en relaci¢n con reestructuraciones corporativas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Succeeded Company Name" }

    { 1100001;3;Field     ;
                ToolTipML=[ENU=Specifies the VAT registration number of the company sucessor in connection with corporate restructuring.;
                           ESP=Especifica el CIF/NIF de la sucesora de la empresa en relaci¢n con reestructuraciones corporativos.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Succeeded VAT Registration No." }

    { 1901792801;1;Group  ;
                CaptionML=[ENU=Payment;
                           ESP=Pago] }

    { 1100020;2;Field     ;
                ToolTipML=[ENU=Specifies a code associated with a payment address other than the customer's standard payment address.;
                           ESP=Especifica un c¢digo asociado a una direcci¢n de pago diferente de la direcci¢n de pago habitual del cliente.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-at Code" }

    { 1100022;2;Field     ;
                ToolTipML=[ENU=Specifies the customer bank code to assign to the sales header in this field.;
                           ESP=Especifica el c¢digo de banco de cliente que debe asignarse a la cabecera de ventas en este campo.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cust. Bank Acc. Code" }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping and Billing;
                           ESP=Env¡o y facturaci¢n];
                GroupType=Group }

    { 91  ;2   ;Group     ;
                GroupType=Group }

    { 90  ;3   ;Group     ;
                GroupType=Group }

    { 88  ;4   ;Field     ;
                Name=ShippingOptions;
                CaptionML=[ENU=Ship-to;
                           ESP=Direcci¢n de env¡o];
                ToolTipML=[ENU=Specifies the address that the products on the sales document are shipped to. Default (Sell-to Address): The same as the customer's sell-to address. Alternate Ship-to Address: One of the customer's alternate ship-to addresses. Custom Address: Any ship-to address that you specify in the fields below.;
                           ESP=Especifica la direcci¢n a la que se env¡an los productos del documento de venta. Predeterminada (direcci¢n de env¡o): la misma que la direcci¢n de env¡o del cliente. Direcci¢n de env¡o alternativa: una de las direcciones de env¡o alternativas del cliente. Direcci¢n personalizada: cualquier direcci¢n que especifique en los campos siguientes.];
                OptionCaptionML=[ENU=Default (Sell-to Address),Alternate Shipping Address,Custom Address;
                                 ESP=Predeterminada (direcci¢n de venta),Direcci¢n de env¡o alternativa,Direcci¢n personalizada];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShipToOptions;
                OnValidate=VAR
                             ShipToAddress@1001 : Record 222;
                             ShipToAddressList@1000 : Page 301;
                           BEGIN
                             CASE ShipToOptions OF
                               ShipToOptions::"Default (Sell-to Address)":
                                 BEGIN
                                   VALIDATE("Ship-to Code",'');
                                   CopySellToAddressToShipToAddress;
                                 END;
                               ShipToOptions::"Alternate Shipping Address":
                                 BEGIN
                                   ShipToAddress.SETRANGE("Customer No.","Sell-to Customer No.");
                                   ShipToAddressList.LOOKUPMODE := TRUE;
                                   ShipToAddressList.SETTABLEVIEW(ShipToAddress);

                                   IF ShipToAddressList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                     ShipToAddressList.GETRECORD(ShipToAddress);
                                     VALIDATE("Ship-to Code",ShipToAddress.Code);
                                   END ELSE
                                     ShipToOptions := ShipToOptions::"Custom Address";
                                 END;
                               ShipToOptions::"Custom Address":
                                 VALIDATE("Ship-to Code",'');
                             END;
                           END;
                            }

    { 4   ;4   ;Group     ;
                Visible=NOT (ShipToOptions = ShipToOptions::"Default (Sell-to Address)");
                GroupType=Group }

    { 36  ;5   ;Field     ;
                CaptionML=[ENU=Code;
                           ESP=C¢digo];
                ToolTipML=[ENU=Specifies the code for another shipment address than the customer's own address, which is entered by default.;
                           ESP=Especifica el c¢digo para otra direcci¢n de env¡o distinta a la propia direcci¢n del cliente, que se especifica de forma predeterminada.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Code";
                Importance=Promoted;
                Editable=ShipToOptions = ShipToOptions::"Alternate Shipping Address";
                OnValidate=BEGIN
                             IF (xRec."Ship-to Code" <> '') AND ("Ship-to Code" = '') THEN
                               ERROR(EmptyShipToCodeErr);
                           END;
                            }

    { 38  ;5   ;Field     ;
                CaptionML=[ENU=Name;
                           ESP=Nombre];
                ToolTipML=[ENU=Specifies the name that products on the sales document will be shipped to.;
                           ESP=Especifica el nombre al que se enviar n los productos en el documento de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Name";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 40  ;5   ;Field     ;
                CaptionML=[ENU=Address;
                           ESP=Direcci¢n];
                ToolTipML=[ENU=Specifies the address that products on the sales document will be shipped to.;
                           ESP=Especifica la direcci¢n a la que se enviar n los productos en el documento de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address";
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                QuickEntry=FALSE }

    { 42  ;5   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ESP=Direcci¢n 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ESP=Especifica informaci¢n adicional sobre la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address 2";
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                QuickEntry=FALSE }

    { 44  ;5   ;Field     ;
                CaptionML=[ENU=City;
                           ESP=Poblaci¢n];
                ToolTipML=[ENU=Specifies the city of the customer on the sales document.;
                           ESP=Especifica la ciudad del cliente en el documento de ventas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to City";
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                QuickEntry=FALSE }

    { 297 ;5   ;Group     ;
                Visible=IsShipToCountyVisible;
                GroupType=Group }

    { 127 ;6   ;Field     ;
                CaptionML=[ENU=County;
                           ESP=Provincia];
                ToolTipML=[ENU=Specifies the state, province or county of the address.;
                           ESP=Especifica el estado, la provincia o la comarca de la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to County";
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                QuickEntry=FALSE }

    { 97  ;5   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ESP=C¢digo postal];
                ToolTipML=[ENU=Specifies the postal code.;
                           ESP=Especifica el c¢digo postal.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Post Code";
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                QuickEntry=FALSE }

    { 95  ;5   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           ESP=Pa¡s/regi¢n];
                ToolTipML=[ENU=Specifies the customer's country/region.;
                           ESP=Especifica el pa¡s o regi¢n del cliente.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Country/Region Code";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                OnValidate=BEGIN
                             IsShipToCountyVisible := FormatAddress.UseCounty("Ship-to Country/Region Code");
                           END;

                QuickEntry=FALSE }

    { 46  ;4   ;Field     ;
                CaptionML=[ENU=Contact;
                           ESP=Contacto];
                ToolTipML=[ENU=Specifies the name of the contact person at the address that products on the sales document will be shipped to.;
                           ESP=Especifica el nombre de la persona de contacto en la direcci¢n a la que se enviar n los productos en el documento de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Contact" }

    { 77  ;3   ;Group     ;
                CaptionML=[ENU=Shipment Method;
                           ESP=Condiciones env¡o];
                GroupType=Group }

    { 48  ;4   ;Field     ;
                CaptionML=[ENU=Code;
                           ESP=C¢digo];
                ToolTipML=[ENU=Specifies how items on the sales document are shipped to the customer.;
                           ESP=Especifica la manera en que los productos del documento de venta se env¡an al cliente.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Method Code";
                Importance=Additional }

    { 107 ;4   ;Field     ;
                CaptionML=[ENU=Agent;
                           ESP=Agente];
                ToolTipML=[ENU=Specifies which shipping agent is used to transport the items on the sales document to the customer.;
                           ESP=Especifica el transportista que se usa para transportar los productos del documento de venta al cliente.];
                ApplicationArea=#Suite;
                SourceExpr="Shipping Agent Code";
                Importance=Additional }

    { 139 ;4   ;Field     ;
                CaptionML=[ENU=Agent Service;
                           ESP=Servicio de agente];
                ToolTipML=[ENU=Specifies the code that represents the default shipping agent service you are using for this sales order.;
                           ESP=Especifica el c¢digo que representa el servicio de transportista predeterminado que se usa para este pedido de venta.];
                ApplicationArea=#Suite;
                SourceExpr="Shipping Agent Service Code";
                Importance=Additional }

    { 109 ;4   ;Field     ;
                ToolTipML=[ENU=Specifies the shipping agent's package number.;
                           ESP=Especifica el n£mero de paquete del transportista.];
                ApplicationArea=#Suite;
                SourceExpr="Package Tracking No.";
                Importance=Additional }

    { 85  ;2   ;Group     ;
                GroupType=Group }

    { 93  ;3   ;Field     ;
                CaptionML=[ENU=Bill-to;
                           ESP=Direcci¢n facturaci¢n];
                ToolTipML=[ENU=Specifies the customer that the sales invoice will be sent to. Default (Customer): The same as the customer on the sales invoice. Another Customer: Any customer that you specify in the fields below.;
                           ESP=Especifica el cliente al que se enviar  la factura de venta. Predeterminado (cliente): el mismo que el cliente en la factura de venta. Otro cliente: cualquier cliente que especifique en los campos siguientes.];
                OptionCaptionML=[ENU=Default (Customer),Another Customer;
                                 ESP=Predeterminado (cliente),Otro cliente];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BillToOptions;
                OnValidate=BEGIN
                             IF BillToOptions = BillToOptions::"Default (Customer)" THEN BEGIN
                               VALIDATE("Bill-to Customer No.","Sell-to Customer No.");
                               RecallModifyAddressNotification(GetModifyBillToCustomerAddressNotificationId);
                             END;

                             CopySellToAddressToBillToAddress;
                           END;
                            }

    { 82  ;3   ;Group     ;
                Visible=BillToOptions = BillToOptions::"Another Customer";
                GroupType=Group }

    { 18  ;4   ;Field     ;
                CaptionML=[ENU=Name;
                           ESP=Nombre];
                ToolTipML=[ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to.;
                           ESP=Especifica el cliente al que se enviar  la factura de venta, cuando es distinto del cliente al que se realiza la venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             IF GETFILTER("Bill-to Customer No.") = xRec."Bill-to Customer No." THEN
                               IF "Bill-to Customer No." <> xRec."Bill-to Customer No." THEN
                                 SETRANGE("Bill-to Customer No.");

                             IF ApplicationAreaMgmtFacade.IsFoundationEnabled THEN
                               SalesCalcDiscountByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;
                            }

    { 20  ;4   ;Field     ;
                CaptionML=[ENU=Address;
                           ESP=Direcci¢n];
                ToolTipML=[ENU=Specifies the address of the customer that you will send the invoice to.;
                           ESP=Especifica la direcci¢n del cliente a quien se enviar  la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No.";
                QuickEntry=FALSE }

    { 22  ;4   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ESP=Direcci¢n 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ESP=Especifica informaci¢n adicional sobre la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address 2";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No.";
                QuickEntry=FALSE }

    { 24  ;4   ;Field     ;
                CaptionML=[ENU=City;
                           ESP=Poblaci¢n];
                ToolTipML=[ENU=Specifies the city of the customer on the sales document.;
                           ESP=Especifica la ciudad del cliente en el documento de ventas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to City";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No.";
                QuickEntry=FALSE }

    { 130 ;4   ;Group     ;
                Visible=IsBillToCountyVisible;
                GroupType=Group }

    { 132 ;5   ;Field     ;
                CaptionML=[ENU=County;
                           ESP=Provincia];
                ToolTipML=[ENU=Specifies the state, province or county of the address.;
                           ESP=Especifica el estado, la provincia o la comarca de la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to County";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No.";
                QuickEntry=FALSE }

    { 89  ;4   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ESP=C¢digo postal];
                ToolTipML=[ENU=Specifies the postal code.;
                           ESP=Especifica el c¢digo postal.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Post Code";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No.";
                QuickEntry=FALSE }

    { 126 ;4   ;Field     ;
                CaptionML=[ENU=Country/Region Code;
                           ESP=C¢digo pa¡s/regi¢n];
                ToolTipML=[ENU=Specifies the country or region of the address.;
                           ESP=Especifica el pa¡s o la regi¢n de la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Country/Region Code";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No.";
                OnValidate=BEGIN
                             IsBillToCountyVisible := FormatAddress.UseCounty("Bill-to Country/Region Code");
                           END;

                QuickEntry=FALSE }

    { 159 ;4   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ESP=N§ contacto];
                ToolTipML=[ENU=Specifies the number of the contact the invoice will be sent to.;
                           ESP=Especifica el n£mero del contacto a quien se enviar  la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Contact No.";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No." }

    { 26  ;4   ;Field     ;
                CaptionML=[ENU=Contact;
                           ESP=Contacto];
                ToolTipML=[ENU=Specifies the name of the person you should contact at the customer who you are sending the invoice to.;
                           ESP=Especifica el nombre de la persona con quien contactarse cuando es necesario comunicarse con el cliente al que se enviar  la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Contact";
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No." }

    { 94  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the location from where inventory items to the customer on the sales document are to be shipped by default.;
                           ESP=Especifica el almacn desde el que se env¡an de forma predeterminada los productos de inventario al cliente en el documento de venta.];
                ApplicationArea=#Location;
                SourceExpr="Location Code" }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when items on the document are shipped or were shipped. A shipment date is usually calculated from a requested delivery date plus lead time.;
                           ESP=Especifica cu ndo se van a enviar o se han enviado los productos del documento. Se calcula normalmente una fecha de env¡o con la fecha de entrega solicitada y el plazo de seguridad.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Date";
                Importance=Promoted }

    { 119 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the customer accepts partial shipment of orders.;
                           ESP=Especifica si el cliente acepta env¡os parciales de pedidos.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipping Advice";
                Importance=Additional;
                OnValidate=VAR
                             ConfirmManagement@1000 : Codeunit 27;
                           BEGIN
                             IF "Shipping Advice" <> xRec."Shipping Advice" THEN
                               IF NOT ConfirmManagement.ConfirmProcess(STRSUBSTNO(Text001,FIELDCAPTION("Shipping Advice")),TRUE) THEN
                                 ERROR(Text002);
                           END;
                            }

    { 141 ;2   ;Field     ;
                ToolTipML=[ENU="Specifies a date formula for the time it takes to get items ready to ship from this location. The time element is used in the calculation of the delivery date as follows: Shipment Date + Outbound Warehouse Handling Time = Planned Shipment Date + Shipping Time = Planned Delivery Date.";
                           ESP="Especifica una f¢rmula de fecha con el tiempo que se tarda en preparar los productos para su env¡o desde este almacn. El elemento de tiempo se utiliza en el c lculo de la fecha de entrega de la siguiente manera: fecha env¡o + tiempo de manipulaci¢n en el almacn de salida = fecha env¡o planificada + tiempo env¡o = fecha entrega planificada."];
                ApplicationArea=#Warehouse;
                SourceExpr="Outbound Whse. Handling Time";
                Importance=Additional }

    { 143 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how long it takes from when the items are shipped from the warehouse to when they are delivered.;
                           ESP=Especifica el tiempo que transcurre desde que se env¡an los productos desde el almacn hasta que se entregan.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipping Time";
                Importance=Additional }

    { 145 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the shipment of one or more lines has been delayed, or that the shipment date is before the work date.;
                           ESP=Especifica que se ha retrasado el env¡o de una o varias l¡neas o que la fecha de env¡o es anterior a la fecha de trabajo.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Late Order Shipping";
                Importance=Additional }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           ESP=Comercio exterior] }

    { 103 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a specification of the document's transaction, for the purpose of reporting to INTRASTAT.;
                           ESP=Especifica una especificaci¢n de transacci¢n del documento de venta con el fin de notificarla a INTRASTAT.];
                ApplicationArea=#Suite;
                SourceExpr="Transaction Specification" }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of transaction that the document represents, for the purpose of reporting to INTRASTAT.;
                           ESP=Especifica el tipo de transacci¢n que representa el documento con el fin de notificarlo a INTRASTAT.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Transaction Type" }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the transport method, for the purpose of reporting to INTRASTAT.;
                           ESP=Especifica el modo de transporte con el fin de informar a INTRASTAT.];
                ApplicationArea=#Suite;
                SourceExpr="Transport Method" }

    { 99  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the point of exit through which you ship the items out of your country/region, for reporting to Intrastat.;
                           ESP=Especifica el punto de salida a travs del cual se enviar n los productos fuera de su pa¡s o regi¢n, con el fin de informar a Intrastat.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Exit Point" }

    { 101 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the area of the customer or vendor, for the purpose of reporting to INTRASTAT.;
                           ESP=Especifica el  rea del cliente o proveedor con el fin de informar a INTRASTAT.];
                ApplicationArea=#Suite;
                SourceExpr=Area }

    { 1900201301;1;Group  ;
                CaptionML=[ENU=Prepayment;
                           ESP=Prepago] }

    { 228 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the prepayment percentage to use to calculate the prepayment for sales.;
                           ESP=Especifica el porcentaje de prepago que se debe usar para calcular el prepago de las ventas.];
                ApplicationArea=#Prepayments;
                SourceExpr="Prepayment %";
                Importance=Promoted;
                OnValidate=BEGIN
                             Prepayment37OnAfterValidate;
                           END;
                            }

    { 229 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that prepayments on the sales order are combined if they have the same general ledger account for prepayments or the same dimensions.;
                           ESP=Especifica que los prepagos del pedido de venta est n combinados si tienen la misma cuenta de contabilidad general para los prepagos o las mismas dimensiones.];
                ApplicationArea=#Dimensions;
                SourceExpr="Compress Prepayment" }

    { 162 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that represents the payment terms for prepayment invoices related to the sales document.;
                           ESP=Especifica el c¢digo que representa los trminos de pago para las facturas de prepago relacionadas con el documento de venta.];
                ApplicationArea=#Prepayments;
                SourceExpr="Prepmt. Payment Terms Code" }

    { 239 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the prepayment invoice for this sales order is due.;
                           ESP=Especifica cu ndo vence la factura de prepago para este pedido de venta.];
                ApplicationArea=#Prepayments;
                SourceExpr="Prepayment Due Date";
                Importance=Promoted }

    { 164 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payment discount percent granted on the prepayment if the customer pays on or before the date entered in the Prepmt. Pmt. Discount Date field.;
                           ESP=Especifica el porcentaje de descuento por pronto pago que se concedi¢ al prepago si el cliente paga en o antes de la fecha introducida en el campo Fecha descuento prepago.];
                ApplicationArea=#Prepayments;
                SourceExpr="Prepmt. Payment Discount %" }

    { 70  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the last date the customer can pay the prepayment invoice and still receive a payment discount on the prepayment amount.;
                           ESP=Especifica la fecha hasta la que el cliente puede abonar la factura de prepago y obtener un descuento por pronto pago en la cantidad de prepago.];
                ApplicationArea=#Prepayments;
                SourceExpr="Prepmt. Pmt. Discount Date" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1100288000;1;Part   ;
                Name=CaptureUI;
                CaptionML=[ENU=Document;
                           ESP=Documento];
                SubPageView=SORTING(Created Doc. Table No.,Created Doc. Subtype,Created Doc. No.,Created Doc. Ref. No.)
                            WHERE(Created Doc. Table No.=CONST(36),
                                  Created Doc. Subtype=CONST(1));
                SubPageLink=Created Doc. No.=FIELD(No.);
                PagePartID=Page6085791;
                Visible=ShowCaptureUIFactBox }

    { 1903433807;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page35304;
                Visible=TRUE;
                PartType=Page }

    { 1903433607;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page35306;
                Visible=TRUE;
                PartType=Page }

    { 1901275107;1;Part   ;
                Name=Attached Documents;
                CaptionML=[ENU=Attachments;
                           ESP=Datos adjuntos];
                ApplicationArea=#All;
                SubPageLink=Table ID=CONST(36),
                            No.=FIELD(No.),
                            Document Type=FIELD(Document Type);
                PagePartID=Page1174;
                PartType=Page }

    { 35  ;1   ;Part      ;
                ApplicationArea=#All;
                SubPageLink=Table ID=CONST(36),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1903720907;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9080;
                PartType=Page }

    { 1902018507;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                Visible=FALSE;
                PartType=Page }

    { 1900316107;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9084;
                PartType=Page }

    { 1906127307;1;Part   ;
                ApplicationArea=#Suite;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9087;
                ProviderID=58;
                PartType=Page }

    { 1901314507;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9089;
                ProviderID=58;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 49  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page193;
                Visible=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1907012907;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9108;
                ProviderID=58;
                Visible=FALSE;
                PartType=Page }

    { 1901796907;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9109;
                ProviderID=58;
                Visible=FALSE;
                PartType=Page }

    { 1907234507;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9081;
                Visible=FALSE;
                PartType=Page }

    { 80  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#All;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CopySalesDoc@1001 : Report 292;
      MoveNegSalesLines@1007 : Report 6699;
      ApplicationAreaMgmtFacade@1022 : Codeunit 9179;
      ApprovalsMgmt@1012 : Codeunit 1535;
      ReportPrint@1002 : Codeunit 228;
      DocPrint@1003 : Codeunit 229;
      ArchiveManagement@1008 : Codeunit 5063;
      SalesCalcDiscountByType@1014 : Codeunit 56;
      UserMgt@1006 : Codeunit 5700;
      CustomerMgt@1047 : Codeunit 1302;
      FormatAddress@1044 : Codeunit 365;
      ChangeExchangeRate@1005 : Page 511;
      Usage@1010 : 'Order Confirmation,Work Order,Pick Instruction';
      NavigateAfterPost@1029 : 'Posted Document,New Document,Nowhere';
      JobQueueVisible@1004 : Boolean INDATASET;
      Text001@1015 : TextConst 'ENU=Do you want to change %1 in all related records in the warehouse?;ESP=¨Desea cambiar %1 en todos los registros relacionados del almacn?';
      Text002@1011 : TextConst 'ENU=The update has been interrupted to respect the warning.;ESP=Se ha interrumpido la actualizaci¢n para respetar la advertencia.';
      DynamicEditable@1009 : Boolean;
      HasIncomingDocument@1020 : Boolean;
      DocNoVisible@1013 : Boolean;
      ExternalDocNoMandatory@1016 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1024 : Boolean;
      OpenApprovalEntriesExist@1023 : Boolean;
      CRMIntegrationEnabled@1000 : Boolean;
      CRMIsCoupledToRecord@1017 : Boolean;
      ShowWorkflowStatus@1018 : Boolean;
      IsOfficeHost@1019 : Boolean;
      CanCancelApprovalForRecord@1021 : Boolean;
      JobQueuesUsed@1026 : Boolean;
      ShowQuoteNo@1025 : Boolean;
      DocumentIsPosted@1027 : Boolean;
      OpenPostedSalesOrderQst@1028 : TextConst '@@@="%1 = posted document number";ENU=The order is posted as number %1 and moved to the Posted Sales Invoices window.\\Do you want to open the posted invoice?;ESP=El pedido se registr¢ con el n£mero %1 y se movi¢ a la ventana de facturas de venta registradas.\\¨Quiere abrir la factura registrada?';
      PaymentServiceVisible@1030 : Boolean;
      PaymentServiceEnabled@1031 : Boolean;
      CallNotificationCheck@1037 : Boolean;
      ShipToOptions@1033 : 'Default (Sell-to Address),Alternate Shipping Address,Custom Address';
      BillToOptions@1032 : 'Default (Customer),Another Customer';
      EmptyShipToCodeErr@1034 : TextConst 'ENU=The Code field can only be empty if you select Custom Address in the Ship-to field.;ESP=El campo C¢digo solo puede estar vac¡o si selecciona Direcci¢n personalizada en el campo Direcci¢n de env¡o.';
      CanRequestApprovalForFlow@1036 : Boolean;
      CanCancelApprovalForFlow@1035 : Boolean;
      IsCustomerOrContactNotEmpty@1039 : Boolean;
      WorkDescription@1038 : Text;
      OperationDescription@1100000 : Text[500];
      IsSaas@1041 : Boolean;
      IsBillToCountyVisible@1043 : Boolean;
      IsSellToCountyVisible@1042 : Boolean;
      IsShipToCountyVisible@1040 : Boolean;
      "<DC>"@1100288010 : Boolean;
      ContiniaLicenseMgt@1100288009 : Codeunit 6192771;
      PurchInvHeaderDCInfo@1100288008 : Record 6085769;
      ApprovalFlowCode@1100288007 : Code[10];
      ShowApproval@1100288006 : Boolean;
      DCApprovalsBridge@1100288005 : Codeunit 6085790;
      SalesMgt@1100288004 : Codeunit 6085770;
      ShowCaptureUIFactBox@1100288003 : Boolean;
      DCApprovalMgt@1100288002 : Codeunit 6085722;
      NoOfDocuments@1100288001 : Text[1024];
      "</DC>"@1100288000 : Boolean;

    LOCAL PROCEDURE ActivateFields@11();
    BEGIN
      IsBillToCountyVisible := FormatAddress.UseCounty("Bill-to Country/Region Code");
      IsSellToCountyVisible := FormatAddress.UseCounty("Sell-to Country/Region Code");
      IsShipToCountyVisible := FormatAddress.UseCounty("Ship-to Country/Region Code");
    END;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer;Navigate@1004 : Option);
    VAR
      SalesHeader@1001 : Record 36;
      LinesInstructionMgt@1002 : Codeunit 1320;
      InstructionMgt@1003 : Codeunit 1330;
      IsScheduledPosting@1005 : Boolean;
    BEGIN
      IF ApplicationAreaMgmtFacade.IsFoundationEnabled THEN
        LinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);

      SendToPosting(PostingCodeunitID);

      IsScheduledPosting := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      DocumentIsPosted := (NOT SalesHeader.GET("Document Type","No.")) OR IsScheduledPosting;
      OnPostOnAfterSetDocumentIsPosted(SalesHeader,IsScheduledPosting,DocumentIsPosted);

      IF IsScheduledPosting THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);

      IF PostingCodeunitID <> CODEUNIT::"Sales-Post (Yes/No)" THEN
        EXIT;

      CASE Navigate OF
        NavigateAfterPost::"Posted Document":
          IF InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) THEN
            ShowPostedConfirmationMessage;
        NavigateAfterPost::"New Document":
          IF DocumentIsPosted THEN BEGIN
            SalesHeader.INIT;
            SalesHeader.VALIDATE("Document Type",SalesHeader."Document Type"::Order);
            SalesHeader.INSERT(TRUE);
            PAGE.RUN(PAGE::"Sales Order",SalesHeader);
          END;
      END;
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@3();
    BEGIN
      CurrPage.SalesLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE SaveInvoiceDiscountAmount@14();
    VAR
      DocumentTotals@1000 : Codeunit 57;
    BEGIN
      CurrPage.SAVERECORD;
      DocumentTotals.SalesRedistributeInvoiceDiscountAmountsOnDocument(Rec);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@5699();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@3212();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@2528();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@2899();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE Prepayment37OnAfterValidate@4319();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1000 : Codeunit 1400;
      DocType@1003 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.SalesDocumentNoIsVisible(DocType::Order,"No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@5();
    VAR
      SalesReceivablesSetup@1000 : Record 311;
    BEGIN
      SalesReceivablesSetup.GET;
      ExternalDocNoMandatory := SalesReceivablesSetup."Ext. Doc. No. Mandatory"
    END;

    LOCAL PROCEDURE ShowPreview@6();
    VAR
      SalesPostYesNo@1000 : Codeunit 81;
    BEGIN
      SalesPostYesNo.Preview(Rec);
    END;

    LOCAL PROCEDURE ShowPrepmtInvoicePreview@15();
    VAR
      SalesPostPrepaymentYesNo@1000 : Codeunit 443;
    BEGIN
      SalesPostPrepaymentYesNo.Preview(Rec,2);
    END;

    LOCAL PROCEDURE ShowPrepmtCrMemoPreview@16();
    VAR
      SalesPostPrepaymentYesNo@1000 : Codeunit 443;
    BEGIN
      SalesPostPrepaymentYesNo.Preview(Rec,3);
    END;

    LOCAL PROCEDURE SetControlVisibility@7();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
      WorkflowWebhookMgt@1000 : Codeunit 1543;
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      SetExtDocNoMandatoryCondition;

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);

      WorkflowWebhookMgt.GetCanRequestAndCanCancel(RECORDID,CanRequestApprovalForFlow,CanCancelApprovalForFlow);
      IsCustomerOrContactNotEmpty := ("Sell-to Customer No." <> '') OR ("Sell-to Contact No." <> '');
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@17();
    VAR
      OrderSalesHeader@1003 : Record 36;
      SalesInvoiceHeader@1000 : Record 112;
      InstructionMgt@1002 : Codeunit 1330;
    BEGIN
      IF NOT OrderSalesHeader.GET("Document Type","No.") THEN BEGIN
        SalesInvoiceHeader.SETRANGE("No.","Last Posting No.");
        IF SalesInvoiceHeader.FINDFIRST THEN
          IF InstructionMgt.ShowConfirm(STRSUBSTNO(OpenPostedSalesOrderQst,SalesInvoiceHeader."No."),
               InstructionMgt.ShowPostedConfirmationMessageCode)
          THEN
            PAGE.RUN(PAGE::"Posted Sales Invoice",SalesInvoiceHeader);
      END;
    END;

    LOCAL PROCEDURE UpdatePaymentService@1();
    VAR
      PaymentServiceSetup@1000 : Record 1060;
    BEGIN
      PaymentServiceVisible := PaymentServiceSetup.IsPaymentServiceVisible;
      PaymentServiceEnabled := PaymentServiceSetup.CanChangePaymentService(Rec);
    END;

    [External]
    PROCEDURE UpdateShipToBillToGroupVisibility@9();
    BEGIN
      CustomerMgt.CalculateShipToBillToOptions(ShipToOptions,BillToOptions,Rec);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeStatisticsAction@8(VAR SalesHeader@1000 : Record 36;VAR Handled@1001 : Boolean);
    BEGIN
    END;

    [External]
    PROCEDURE CheckNotificationsOnce@10();
    BEGIN
      CallNotificationCheck := TRUE;
    END;

    LOCAL PROCEDURE ShowReleaseNotification@12() : Boolean;
    VAR
      LocationsQuery@1001 : Query 5001;
    BEGIN
      IF Status <> Status::Released THEN BEGIN
        LocationsQuery.SETRANGE(Document_No,"No.");
        LocationsQuery.SETRANGE(Require_Pick,TRUE);
        LocationsQuery.OPEN;
        IF LocationsQuery.READ THEN
          EXIT(TRUE);
        LocationsQuery.SETRANGE(Require_Pick);
        LocationsQuery.SETRANGE(Require_Shipment,TRUE);
        LocationsQuery.OPEN;
        EXIT(LocationsQuery.READ);
      END;
      EXIT(FALSE);
    END;

    [Integration]
    LOCAL PROCEDURE OnPostOnAfterSetDocumentIsPosted@13(SalesHeader@1000 : Record 36;VAR IsScheduledPosting@1001 : Boolean;VAR DocumentIsPosted@1002 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

OBJECT Page 132 Posted Sales Invoice
{
  OBJECT-PROPERTIES
  {
    Date=16/03/21;
    Time=13:46:42;
    Modified=Yes;
    Version List=NAVW114.00,NAVES14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Posted Sales Invoice;
               ESP=Hist¢rico facturas venta];
    InsertAllowed=No;
    SourceTable=Table112;
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Invoice,Correct,Print/Send,Navigate;
                                ESP=Nuevo,Procesar,Informe,Factura,Corregir,Imprimir y enviar,Navegar];
    OnInit=BEGIN
             DocExcStatusVisible := TRUE;
           END;

    OnOpenPage=VAR
                 PaymentServiceSetup@1000 : Record 1060;
                 OfficeMgt@1001 : Codeunit 1630;
                 SIIManagement@1100000 : Codeunit 10756;
               BEGIN
                 SetSecurityFilterOnRespCenter;
                 CRMIntegrationEnabled := CRMIntegrationManagement.IsCRMIntegrationEnabled;

                 IsOfficeAddin := OfficeMgt.IsAvailable;
                 IsFoundationEnabled := ApplicationAreaMgmtFacade.IsFoundationEnabled;

                 SIIManagement.CombineOperationDescription("Operation Description","Operation Description 2",OperationDescription);

                 ActivateFields;
                 PaymentServiceVisible := PaymentServiceSetup.IsPaymentServiceVisible;
               END;

    OnAfterGetRecord=BEGIN
                       DocExchStatusStyle := GetDocExchStatusStyle;
                     END;

    OnAfterGetCurrRecord=VAR
                           IncomingDocument@1000 : Record 130;
                           CRMCouplingManagement@1001 : Codeunit 5331;
                           SIIManagement@1100000 : Codeunit 10756;
                           "<DC>"@1100288003 : Boolean;
                           DCApprovalMgt@1100288002 : Codeunit 6085722;
                           DummyPurchHeader@1100288001 : Record 38;
                           "</DC>"@1100288000 : Boolean;
                         BEGIN
                           HasIncomingDocument := IncomingDocument.PostedDocExists("No.","Posting Date");
                           DocExchStatusStyle := GetDocExchStatusStyle;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           IF CRMIntegrationEnabled THEN BEGIN
                             CRMIsCoupledToRecord := CRMCouplingManagement.IsRecordCoupledToCRM(RECORDID);
                             IF "No." <> xRec."No." THEN
                               CRMIntegrationManagement.SendResultNotification(Rec);
                           END;
                           UpdatePaymentService;
                           DocExcStatusVisible := DocExchangeStatusIsSent;

                           SIIManagement.CombineOperationDescription("Operation Description","Operation Description 2",OperationDescription);

                           //<DC>
                           IF ContiniaLicenseMgt.HasLicenseAccessToDC THEN BEGIN
                             ShowCaptureUIFactBox := SalesMgt.HasDocumentsPostedInv(Rec);
                             NoOfDocuments := SalesMgt.GetNoOfDocsLabelForPostedInv(Rec);
                           END;
                           //</DC>
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 55      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 ESP=&Factura];
                      Image=Invoice }
      { 8       ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 ESP=Estad¡sticas];
                      ToolTipML=[ENU=View statistical information, such as the value of posted entries, for the record.;
                                 ESP=Permite ver informaci¢n estad¡stica del registro, como el valor de los movimientos registrados.];
                      ApplicationArea=#Suite;
                      RunObject=Page 397;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Statistics;
                      PromotedCategory=Category4 }
      { 57      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ESP=C&omentarios];
                      ToolTipML=[ENU=View or add comments for the record.;
                                 ESP=Permite ver o agregar comentarios para el registro.];
                      ApplicationArea=#Comments;
                      RunObject=Page 67;
                      RunPageLink=Document Type=CONST(Posted Invoice),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category4 }
      { 89      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESP=Dimensiones];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ESP=Permite ver o editar dimensiones, como el  rea, el proyecto o el departamento, que pueden asignarse a los documentos de venta y compra para distribuir costes y analizar el historial de transacciones.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 112     ;2   ;Action    ;
                      AccessByPermission=TableData 456=R;
                      CaptionML=[ENU=Approvals;
                                 ESP=Aprobaciones];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 ESP=Permite ver una lista de los registros en espera de aprobaci¢n. Por ejemplo, puede ver quin ha solicitado la aprobaci¢n del registro, cu ndo se envi¢ y la fecha de vencimiento de la aprobaci¢n.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=Approvals;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ShowPostedApprovalEntries(RECORDID);
                               END;
                                }
      { 1901458458;2 ;Action    ;
                      Name=DocAttach;
                      CaptionML=[ENU=Attachments;
                                 ESP=Datos adjuntos];
                      ToolTipML=[ENU=Add a file as an attachment. You can attach images as well as documents.;
                                 ESP=Permite agregar un archivo como adjunto. Puede adjuntar im genes y documentos.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Image=Attach;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 DocumentAttachmentDetails@1000 : Page 1173;
                                 RecRef@1001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentAttachmentDetails.OpenForRecRef(RecRef);
                                 DocumentAttachmentDetails.RUNMODAL;
                               END;
                                }
      { 171     ;2   ;Separator  }
      { 35      ;2   ;Action    ;
                      Name=ChangePaymentService;
                      CaptionML=[ENU=Change Payment Service;
                                 ESP=Cambiar servicio de pago];
                      ToolTipML=[ENU=Change or add the payment service, such as PayPal Standard, that will be included on the sales document so the customer can quickly access the payment site.;
                                 ESP=Permite cambiar o agregar el servicio de pago, como Est ndar de PayPal, que se incluir  en el documento de ventas para que el cliente pueda obtener acceso r pidamente al sitio de pago.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=PaymentServiceVisible;
                      PromotedIsBig=Yes;
                      Image=ElectronicPayment;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 PaymentServiceSetup@1000 : Record 1060;
                               BEGIN
                                 PaymentServiceSetup.ChangePaymentServicePostedInvoice(Rec);
                               END;
                                }
      { 45      ;1   ;ActionGroup;
                      Name=ActionGroupCRM;
                      CaptionML=[ENU=Dynamics 365 for Sales;
                                 ESP=Dynamics 365 for Sales];
                      Visible=CRMIntegrationEnabled }
      { 43      ;2   ;Action    ;
                      Name=CRMGotoInvoice;
                      CaptionML=[ENU=Invoice;
                                 ESP=Facturar];
                      ToolTipML=[ENU=Open the coupled Dynamics 365 for Sales invoice.;
                                 ESP=Permite abrir la factura emparejada de Dynamics 365 for Sales.];
                      ApplicationArea=#Suite;
                      Enabled=CRMIsCoupledToRecord;
                      Image=CoupledSalesInvoice;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.ShowCRMEntityFromRecordID(RECORDID);
                               END;
                                }
      { 29      ;2   ;Action    ;
                      Name=CreateInCRM;
                      CaptionML=[ENU=Create Invoice in Dynamics 365 for Sales;
                                 ESP=Crear factura en Dynamics 365 for Sales];
                      ToolTipML=[ENU=Create a sales invoice in Dynamics 365 for Sales that is connected to this posted sales invoice.;
                                 ESP=Crea una factura de venta en Dynamics 365 for Sales asociada a esta factura de venta registrada.];
                      ApplicationArea=#Suite;
                      Enabled=NOT CRMIsCoupledToRecord;
                      Image=NewSalesInvoice;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.CreateNewRecordsInCRM(RECORDID);
                               END;
                                }
      { 84      ;2   ;Action    ;
                      Name=ShowLog;
                      CaptionML=[ENU=Synchronization Log;
                                 ESP=Registro de sincronizaci¢n];
                      ToolTipML=[ENU=View integration synchronization jobs for the posted sales invoice table.;
                                 ESP=Permite ver los trabajos de sincronizaci¢n de integraci¢n para la tabla de facturas de venta registradas.];
                      ApplicationArea=#Suite;
                      Image=Log;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.ShowLog(RECORDID);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 5       ;1   ;Action    ;
                      Name=SendCustom;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Send;
                                 ESP=Enviar];
                      ToolTipML=[ENU=Prepare to send the document according to the customer's sending profile, such as attached to an email. The Send document to window opens first so you can confirm or select a sending profile.;
                                 ESP=Prepara el documento para enviarlo seg£n el perfil que cuenta con las preferencias de env¡o del cliente, por ejemplo, adjunto en un correo electr¢nico. La ventana "Enviar documento a" se abre primero para que pueda confirmar o seleccionar un perfil de env¡o.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendToMultiple;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 SalesInvHeader@1000 : Record 112;
                               BEGIN
                                 SalesInvHeader := Rec;
                                 CurrPage.SETSELECTIONFILTER(SalesInvHeader);
                                 SalesInvHeader.SendRecords;
                               END;
                                }
      { 58      ;1   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ESP=&Imprimir];
                      ToolTipML=[ENU=Prepare to print the document. A report request window for the document opens where you can specify what to include on the print-out.;
                                 ESP=Prepara el documento para imprimirlo. Se abre una ventana de solicitud de informe para el documento, donde puede especificar qu incluir en la impresi¢n.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsOfficeAddin;
                      Image=Print;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 SalesInvHeader := Rec;
                                 CurrPage.SETSELECTIONFILTER(SalesInvHeader);
                                 SalesInvHeader.PrintRecords(TRUE);
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=Email;
                      CaptionML=[ENU=&Email;
                                 ESP=&Correo electr¢nico];
                      ToolTipML=[ENU=Prepare to email the document. The Send Email window opens prefilled with the customer's email address so you can add or edit information.;
                                 ESP=Prepara el documento para enviarlo mediante correo electr¢nico. La ventana "Enviar correo electr¢nico" se abre previamente rellenada con la direcci¢n de correo electr¢nico del cliente, para que pueda agregar o editar la informaci¢n antes de enviar el correo.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Email;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 SalesInvHeader := Rec;
                                 CurrPage.SETSELECTIONFILTER(SalesInvHeader);
                                 SalesInvHeader.EmailRecords(TRUE);
                               END;
                                }
      { 59      ;1   ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 ESP=&Navegar];
                      ToolTipML=[ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                                 ESP=Permite buscar todos los movimientos y los documentos que existen para el n£mero de documento y la fecha de registro que constan en el movimiento o el documento seleccionado.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsOfficeAddin;
                      Image=Navigate;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 Navigate;
                               END;
                                }
      { 1100000 ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESP=Funci&ones];
                      Image=Action }
      { 1100001 ;2   ;Action    ;
                      Name=FindCorrectiveInvoices;
                      CaptionML=[ENU=&Find Corrective Invoices;
                                 ESP=&Buscar facturas rectificativas];
                      ToolTipML=[ENU=View related corrective invoices. You can send a corrective invoice when there is an error or dispute that affects a VAT amount or fiscal data. This invoice includes all legally required data and refers to the original invoice or invoices.;
                                 ESP=Permite ver las facturas rectificativas relacionadas. Puede enviar una factura rectificativa cuando hay un error o conflicto que afecta a un importe de IVA o datos fiscales. Esta factura incluye todos los datos necesarios legalmente y hace referencia a la factura o facturas originales.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 144;
                      RunPageLink=Corrected Invoice No.=FIELD(No.);
                      Image=FindCreditMemo }
      { 13      ;1   ;Action    ;
                      Name=ActivityLog;
                      CaptionML=[ENU=Activity Log;
                                 ESP=Registro de actividad];
                      ToolTipML=[ENU=View the status and any errors if the document was sent as an electronic document or OCR file through the document exchange service.;
                                 ESP=Permite ver el estado y cualquier error si el documento se envi¢ como un documento electr¢nico o archivo de OCR mediante el servicio de intercambio de documentos.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Log;
                      OnAction=BEGIN
                                 ShowActivityLog;
                               END;
                                }
      { 23      ;1   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 ESP=Documento entrante];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 21      ;2   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 ESP=Ver documento entrante];
                      ToolTipML=[ENU=View any incoming document records and file attachments that exist for the entry or document.;
                                 ESP=Permite ver los registros de documentos entrantes y los archivos adjuntos que existen para el movimiento o el documento.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCard("No.","Posting Date");
                               END;
                                }
      { 19      ;2   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 ESP=Seleccionar documento entrante];
                      ToolTipML=[ENU=Select an incoming document record and file attachment that you want to link to the entry or document.;
                                 ESP=Permite seleccionar un registro de documento entrante y un archivo adjunto que desee vincular al movimiento o al documento.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT HasIncomingDocument;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.SelectIncomingDocumentForPostedDocument("No.","Posting Date",RECORDID);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 ESP=Crear documento entrante desde archivo];
                      ToolTipML=[ENU=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.;
                                 ESP=Permite crear un registro de documento entrante al seleccionar un archivo que se ha de adjuntar y luego vincular el registro de documento entrante al movimiento o al documento.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPostedDocument("No.","Posting Date");
                               END;
                                }
      { 41      ;1   ;ActionGroup;
                      CaptionML=[ENU=Correct;
                                 ESP=Corregir] }
      { 39      ;2   ;Action    ;
                      Name=CorrectInvoice;
                      CaptionML=[ENU=Correct;
                                 ESP=Corregir];
                      ToolTipML=[ENU=Reverse this posted invoice and automatically create a new invoice with the same information that you can correct before posting. This posted invoice will automatically be canceled.;
                                 ESP=Permite revertir esta factura registrada y crear autom ticamente una factura nueva con la misma informaci¢n que se puede corregir antes del registro. Esta factura registrada se cancelar  autom ticamente.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsFoundationEnabled;
                      PromotedIsBig=Yes;
                      Image=Undo;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 CorrectPstdSalesInvYesNo@1000 : Codeunit 1322;
                               BEGIN
                                 IF CorrectPstdSalesInvYesNo.CorrectInvoice(Rec) THEN
                                   CurrPage.CLOSE;
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=CancelInvoice;
                      CaptionML=[ENU=Cancel;
                                 ESP=Cancelar];
                      ToolTipML=[ENU=Create and post a sales credit memo that reverses this posted sales invoice. This posted sales invoice will be canceled.;
                                 ESP=Cree y registre un abono de venta que revierte esta factura de venta registrada. Esta factura de venta registrada se cancelar .];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsFoundationEnabled;
                      PromotedIsBig=Yes;
                      Image=Cancel;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 CancelPstdSalesInvYesNo@1000 : Codeunit 1323;
                               BEGIN
                                 IF CancelPstdSalesInvYesNo.CancelInvoice(Rec) THEN
                                   CurrPage.CLOSE;
                               END;
                                }
      { 33      ;2   ;Action    ;
                      Name=CreateCreditMemo;
                      CaptionML=[ENU=Create Corrective Credit Memo;
                                 ESP=Crear abono correctivo];
                      ToolTipML=[ENU=Create a credit memo for this posted invoice that you complete and post manually to reverse the posted invoice.;
                                 ESP=Crea un abono para esta factura registrada que se puede completar y registrar manualmente para revertir la factura registrada.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=CreateCreditMemo;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 SalesHeader@1001 : Record 36;
                                 CorrectPostedSalesInvoice@1000 : Codeunit 1303;
                               BEGIN
                                 IF CorrectPostedSalesInvoice.CreateCreditMemoCopyDocument(Rec,SalesHeader) THEN BEGIN
                                   PAGE.RUN(PAGE::"Sales Credit Memo",SalesHeader);
                                   CurrPage.CLOSE;
                                 END;
                               END;
                                }
      { 47      ;2   ;Action    ;
                      Name=ShowCreditMemo;
                      CaptionML=[ENU=Show Canceled/Corrective Credit Memo;
                                 ESP=Mostrar abono cancelado/correctivo];
                      ToolTipML=[ENU=Open the posted sales credit memo that was created when you canceled the posted sales invoice. If the posted sales invoice is the result of a canceled sales credit memo, then the canceled sales credit memo will open.;
                                 ESP=Abre el abono de venta registrado que se cre¢ cuando cancel¢ la factura de venta registrada. Si la factura de venta registrada es el resultado de un abono de venta cancelado, se abrir  el abono de venta cancelado.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=Cancelled OR Corrective;
                      Image=CreditMemo;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 ShowCanceledOrCorrCrMemo;
                               END;
                                }
      { 51      ;1   ;ActionGroup;
                      CaptionML=[ENU=Invoice;
                                 ESP=Factura];
                      Image=Invoice }
      { 49      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Customer;
                                 ESP=Cliente];
                      ToolTipML=[ENU=View or edit detailed information about the customer.;
                                 ESP=Permite ver o editar la informaci¢n detallada sobre el cliente.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category7 }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESP=General] }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the posted invoice number.;
                           ESP=Especifica el n£mero de la factura registrada.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No.";
                Importance=Promoted;
                Editable=FALSE }

    { 61  ;2   ;Field     ;
                CaptionML=[ENU=Customer;
                           ESP=Cliente];
                ToolTipML=[ENU=Specifies the name of the customer that you shipped the items on the invoice to.;
                           ESP=Especifica el nombre del cliente al que se enviaron los art¡culos que constan en la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Customer Name";
                TableRelation=Customer.Name;
                Importance=Promoted;
                Editable=FALSE }

    { 4   ;2   ;Group     ;
                CaptionML=[ENU=Sell-to;
                           ESP=Direcci¢n venta];
                GroupType=Group }

    { 63  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ESP=Direcci¢n];
                ToolTipML=[ENU=Specifies the address of the customer that the items on the invoice were shipped to.;
                           ESP=Especifica el la direcci¢n del cliente al que se enviaron los art¡culos que constan en la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address";
                Importance=Additional;
                Editable=FALSE }

    { 65  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ESP=Direcci¢n 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ESP=Especifica informaci¢n adicional sobre la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address 2";
                Importance=Additional;
                Editable=FALSE }

    { 67  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ESP=Poblaci¢n];
                ToolTipML=[ENU=Specifies the city of the customer on the sales document.;
                           ESP=Especifica la ciudad del cliente en el documento de ventas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to City";
                Importance=Additional;
                Editable=FALSE }

    { 88  ;3   ;Group     ;
                Visible=IsSellToCountyVisible;
                GroupType=Group }

    { 85  ;4   ;Field     ;
                CaptionML=[ENU=County;
                           ESP=Provincia];
                ToolTipML=[ENU=Specifies the state, province or county as a part of the address.;
                           ESP=Especifica el estado, provincia o comarca como parte de la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to County";
                Importance=Additional;
                Editable=FALSE }

    { 6   ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ESP=C¢digo postal];
                ToolTipML=[ENU=Specifies the postal code.;
                           ESP=Especifica el c¢digo postal.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Post Code";
                Importance=Additional;
                Editable=FALSE }

    { 87  ;3   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           ESP=Pa¡s/regi¢n];
                ToolTipML=[ENU=Specifies the country or region of the address.;
                           ESP=Especifica el pa¡s o la regi¢n de la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Country/Region Code";
                Importance=Additional;
                Editable=FALSE }

    { 96  ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ESP=N§ contacto];
                ToolTipML=[ENU=Specifies the number of the contact that the invoice was sent to.;
                           ESP=Especifica el n£mero del contacto a quien se envi¢ la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Contact No.";
                Importance=Additional;
                Editable=FALSE }

    { 69  ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           ESP=Contacto];
                ToolTipML=[ENU=Specifies the name of the person to contact when you communicate with the customer who you shipped the items to.;
                           ESP=Especifica el nombre de la persona de contacto cuando debe comunicarse con el cliente al que se enviaron los art¡culos.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Contact";
                Editable=FALSE }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which you created the sales document.;
                           ESP=Especifica la fecha de creaci¢n del documento de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Additional;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the invoice was posted.;
                           ESP=Especifica la fecha en la que se registr¢ la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 68  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the invoice is due for payment.;
                           ESP=Especifica la fecha de vencimiento del pago de la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Importance=Promoted;
                Editable=FALSE }

    { 3   ;2   ;Group     ;
                Visible=DocExcStatusVisible;
                GroupType=Group }

    { 27  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the document if you are using a document exchange service to send it as an electronic document. The status values are reported by the document exchange service.;
                           ESP=Especifica el estado del documento si usa un servicio de intercambio de documentos para enviarlo como documento electr¢nico. Los valores de estado se notifican en el servicio de intercambio de documentos.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Exchange Status";
                Importance=Additional;
                Editable=FALSE;
                StyleExpr=DocExchStatusStyle;
                OnDrillDown=VAR
                              DocExchServDocStatus@1000 : Codeunit 1420;
                            BEGIN
                              DocExchServDocStatus.DocExchStatusDrillDown(Rec);
                            END;
                             }

    { 114 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the sales quote document if a quote was used to start the sales process.;
                           ESP=Especifica el n£mero de documento de oferta de venta si se us¢ alguna oferta para iniciar el proceso de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Quote No." }

    { 86  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the sales order that this invoice was posted from.;
                           ESP=Especifica el n£mero del pedido de venta a partir del cual se registr¢ esta factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order No.";
                Importance=Promoted;
                Editable=FALSE }

    { 73  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the sales document that the posted invoice was created for.;
                           ESP=Especifica el n£mero del documento de venta para el que se cre¢ la factura registrada.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pre-Assigned No.";
                Importance=Additional;
                Editable=FALSE }

    { 94  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the external document number that is entered on the sales header that this line was posted from.;
                           ESP=Especifica el n£mero del documento externo incluido en la cabecera de venta a partir del cual se registr¢ esta l¡nea.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document No.";
                Importance=Additional;
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which salesperson is associated with the invoice.;
                           ESP=Especifica qu vendedor est  asociado con la factura.];
                ApplicationArea=#Suite;
                SourceExpr="Salesperson Code";
                Importance=Additional;
                Editable=FALSE }

    { 92  ;2   ;Field     ;
                AccessByPermission=TableData 5714=R;
                ToolTipML=[ENU=Specifies the code of the responsibility center associated with the user who created the invoice, your company, or the customer in the sales invoice.;
                           ESP=Especifica el c¢digo del centro de responsabilidad asociado al usuario que cre¢ la factura, a la empresa o al cliente que figura en la factura de venta.];
                ApplicationArea=#Suite;
                SourceExpr="Responsibility Center";
                Importance=Additional;
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many times the document has been printed.;
                           ESP=Especifica el n£mero de veces que se ha impreso el documento.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. Printed";
                Importance=Additional;
                Editable=FALSE }

    { 77  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the posted sales invoice has been either corrected or canceled.;
                           ESP=Especifica si se corrigi¢ o cancel¢ la factura de venta registrada.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Cancelled;
                Importance=Additional;
                Visible=IsFoundationEnabled;
                Style=Unfavorable;
                StyleExpr=Cancelled;
                OnDrillDown=BEGIN
                              ShowCorrectiveCreditMemo;
                            END;
                             }

    { 102 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the posted sales invoice is a corrective document.;
                           ESP=Especifica si la factura de venta registrada es un documento correctivo.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Corrective;
                Importance=Additional;
                Style=Unfavorable;
                StyleExpr=Corrective;
                OnDrillDown=BEGIN
                              ShowCancelledCreditMemo;
                            END;
                             }

    { 76  ;2   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies if the posted invoice is paid. The check box will also be selected if a credit memo for the remaining amount has been applied.;
                           ESP=Especifica si la factura registrada est  pagada. La casilla tambin se activar  si se aplic¢ un abono por el importe pendiente.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Closed;
                Importance=Promoted }

    { 1100288000;2;Field  ;
                Name=Documents;
                CaptionML=[ENU=Attachments;
                           ESP=Adjuntos];
                ToolTipML=[ENU=Specifies the number of attachments related to this document.;
                           ESP=Especifica el n£mero de adjuntos relacionados con este documento.];
                SourceExpr=NoOfDocuments;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              SalesMgt.ShowDocumentListForPostedInv(Rec);
                            END;
                             }

    { 83  ;2   ;Group     ;
                CaptionML=[ENU=Work Description;
                           ESP=Descripci¢n del trabajo];
                GroupType=Group }

    { 82  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetWorkDescription;
                Importance=Additional;
                Editable=FALSE;
                MultiLine=Yes;
                ShowCaption=No }

    { 54  ;1   ;Part      ;
                Name=SalesInvLines;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page133 }

    { 16  ;1   ;Group     ;
                CaptionML=[ENU=Invoice Details;
                           ESP=Detalles factura];
                GroupType=Group }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code of the invoice.;
                           ESP=Especifica el c¢digo de divisa de la factura.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                Editable=FALSE;
                OnAssistEdit=VAR
                               UpdateCurrencyFactor@1000 : Codeunit 325;
                             BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               ChangeExchangeRate.EDITABLE(FALSE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 "Currency Factor" := ChangeExchangeRate.GetParameter;
                                 UpdateCurrencyFactor.ModifyPostedSalesInvoice(Rec);
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 62  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when items on the document are shipped or were shipped. A shipment date is usually calculated from a requested delivery date plus lead time.;
                           ESP=Especifica cu ndo se van a enviar o se han enviado los productos del documento. Se calcula normalmente una fecha de env¡o con la fecha de entrega solicitada y el plazo de seguridad.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Date";
                Importance=Promoted;
                Editable=FALSE }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document.;
                           ESP=Especifica una f¢rmula que calcula la fecha de vencimiento del pago, la fecha de descuento por pronto pago y el importe de descuento por pronto pago en el documento de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted;
                Editable=FALSE }

    { 1100007;2;Group     ;
                CaptionML=[ENU=SII Information;
                           ESP=Informaci¢n SII];
                GroupType=Group }

    { 1100011;3;Field     ;
                CaptionML=[ENU=Operation Description;
                           ESP=Descripci¢n de la operaci¢n];
                ToolTipML=[ENU=Specifies the Operation Description.;
                           ESP=Especifica la descripci¢n de la operaci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OperationDescription;
                Editable=FALSE;
                MultiLine=Yes;
                OnValidate=VAR
                             SIIManagement@1100000 : Codeunit 10756;
                           BEGIN
                             SIIManagement.SplitOperationDescription(OperationDescription,"Operation Description","Operation Description 2");
                             VALIDATE("Operation Description");
                             VALIDATE("Operation Description 2");
                             MODIFY(TRUE);
                           END;
                            }

    { 1100005;3;Field     ;
                ToolTipML=[ENU=Specifies the Special Scheme Code.;
                           ESP=Especifica el c¢digo de esquema especial.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Special Scheme Code" }

    { 1100002;3;Field     ;
                ToolTipML=[ENU=Specifies the Invoice Type.;
                           ESP=Especifica el tipo de factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Invoice Type" }

    { 1100004;3;Field     ;
                ToolTipML=[ENU=Specifies the ID Type.;
                           ESP=Especifica el tipo de id.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="ID Type" }

    { 1100009;3;Field     ;
                ToolTipML=[ENU=Specifies the name of the company sucessor in connection with corporate restructuring.;
                           ESP=Especifica el nombre de la sucesora de la empresa en relaci¢n con reestructuraciones corporativas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Succeeded Company Name" }

    { 1100003;3;Field     ;
                ToolTipML=[ENU=Specifies the VAT registration number of the company sucessor in connection with corporate restructuring.;
                           ESP=Especifica el CIF/NIF de la sucesora de la empresa en relaci¢n con reestructuraciones corporativos.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Succeeded VAT Registration No." }

    { 1901792801;1;Group  ;
                CaptionML=[ENU=Payment;
                           ESP=Pago] }

    { 1100014;2;Field     ;
                ToolTipML=[ENU=Specifies the customer's payment address code that was on the sales header, Payments tab, when the invoice was created.;
                           ESP=Especifica el c¢digo asociado a la direcci¢n de pago del cliente que figuraba en la cabecera de ventas, pesta¤a Pagos, cuando se cre¢ la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-at Code";
                Editable=FALSE }

    { 1100016;2;Field     ;
                ToolTipML=[ENU=Specifies the client's bank code that was on the sales header when the invoice was created.;
                           ESP=Especifica el c¢digo del banco del cliente que figuraba en la cabecera de ventas cuando se cre¢ la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cust. Bank Acc. Code";
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how the customer must pay for products on the sales document.;
                           ESP=Especifica el modo en que el cliente debe pagar los productos en el documento de venta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Method Code";
                Importance=Promoted;
                Editable=FALSE }

    { 15  ;2   ;Group     ;
                Visible=PaymentServiceVisible;
                GroupType=Group }

    { 64  ;3   ;Field     ;
                Name=SelectedPayments;
                CaptionML=[ENU=Payment Service;
                           ESP=Servicio de pago];
                ToolTipML=[ENU=Specifies the payment service, such as PayPal, that the sales invoice can be paid with.;
                           ESP=Especifica el servicio de pago, como PayPal, con el que se puede pagar la factura de venta.];
                ApplicationArea=#All;
                SourceExpr=GetSelectedPaymentsText;
                Enabled=PaymentServiceEnabled;
                Editable=FALSE;
                MultiLine=Yes;
                OnAssistEdit=VAR
                               PaymentServiceSetup@1000 : Record 1060;
                             BEGIN
                               PaymentServiceSetup.ChangePaymentServicePostedInvoice(Rec);
                               CurrPage.UPDATE(FALSE);
                             END;
                              }

    { 66  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           ESP=Especifica el c¢digo de dimensi¢n del acceso directo 1, que es uno de los dos c¢digos de dimensi¢n globales que se configuran en la ventana Configuraci¢n de contabilidad.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           ESP=Especifica el c¢digo de dimensi¢n del acceso directo 2, que es uno de los dos c¢digos de dimensi¢n globales que se configuran en la ventana Configuraci¢n de contabilidad.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Editable=FALSE }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payment discount percent granted if payment is made on or before the date in the Pmt. Discount Date field.;
                           ESP=Especifica el porcentaje de descuento por pronto pago concedido si el pago se realiza en o antes de la fecha especificada en el campo Fecha dto. P.P.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Discount %";
                Editable=FALSE }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the amount in the entry must be paid for a payment discount to be granted.;
                           ESP=Especifica cu ndo hay que pagar el importe del movimiento para conseguir un descuento por pronto pago.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional;
                Editable=FALSE }

    { 70  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the direct-debit mandate that the customer has signed to allow direct debit collection of payments.;
                           ESP=Especifica la orden de domiciliaci¢n de adeudo directo que el cliente ha firmado para permitir realizar cobros por domiciliaci¢n de pagos.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Direct Debit Mandate ID";
                Editable=FALSE }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the location from which the items were shipped.;
                           ESP=Especifica el c¢digo de la ubicaci¢n desde la que se enviaron los art¡culos.];
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Importance=Additional;
                Editable=FALSE }

    { 53  ;1   ;Group     ;
                CaptionML=[ENU=Shipping and Billing;
                           ESP=Env¡o y facturaci¢n];
                GroupType=Group }

    { 80  ;2   ;Group     ;
                CaptionML=[ENU=Shipping Details;
                           ESP=Detalles de env¡o];
                GroupType=Group }

    { 71  ;3   ;Field     ;
                CaptionML=[ENU=Method;
                           ESP=Mtodo];
                ToolTipML=[ENU=Specifies the code that represents the shipment method for the invoice.;
                           ESP=Especifica el c¢digo que representa el mtodo de env¡o de la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Method Code";
                Importance=Additional;
                Editable=FALSE }

    { 79  ;3   ;Field     ;
                CaptionML=[ENU=Agent;
                           ESP=Agente];
                ToolTipML=[ENU=Specifies which shipping agent is used to transport the items on the sales document to the customer.;
                           ESP=Especifica el transportista que se usa para transportar los productos del documento de venta al cliente.];
                ApplicationArea=#Suite;
                SourceExpr="Shipping Agent Code";
                Importance=Additional;
                Editable=FALSE }

    { 81  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the shipping agent's package number.;
                           ESP=Especifica el n£mero de paquete del transportista.];
                ApplicationArea=#Suite;
                SourceExpr="Package Tracking No.";
                Importance=Additional;
                Editable=FALSE }

    { 1905885101;2;Group  ;
                CaptionML=[ENU=Ship-to;
                           ESP=Direcci¢n de env¡o];
                GroupType=Group }

    { 56  ;3   ;Field     ;
                CaptionML=[ENU=Address Code;
                           ESP=C¢digo de direcci¢n];
                ToolTipML=[ENU=Specifies the address on purchase orders shipped with a drop shipment directly from the vendor to a customer.;
                           ESP=Especifica la direcci¢n para pedidos de compra que se env¡an directamente desde el proveedor a un cliente.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Code";
                Importance=Promoted;
                Editable=FALSE }

    { 46  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ESP=Nombre];
                ToolTipML=[ENU=Specifies the name of the customer that the items were shipped to.;
                           ESP=Especifica el nombre del cliente a quien se enviaron los art¡culos.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Name";
                Editable=FALSE }

    { 42  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ESP=Direcci¢n];
                ToolTipML=[ENU=Specifies the address that the items on the invoice were shipped to.;
                           ESP=Especifica la direcci¢n a la que se enviaron los art¡culos que constan en la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address";
                Editable=FALSE }

    { 44  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ESP=Direcci¢n 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ESP=Especifica informaci¢n adicional sobre la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address 2";
                Editable=FALSE }

    { 38  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ESP=Poblaci¢n];
                ToolTipML=[ENU=Specifies the city of the customer on the sales document.;
                           ESP=Especifica la ciudad del cliente en el documento de ventas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to City";
                Editable=FALSE }

    { 93  ;3   ;Group     ;
                Visible=IsShipToCountyVisible;
                GroupType=Group }

    { 90  ;3   ;Field     ;
                CaptionML=[ENU=County;
                           ESP=Provincia];
                ToolTipML=[ENU=Specifies the state, province or county as a part of the address.;
                           ESP=Especifica el estado, provincia o comarca como parte de la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to County";
                Editable=FALSE }

    { 40  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ESP=C¢digo postal];
                ToolTipML=[ENU=Specifies the postal code.;
                           ESP=Especifica el c¢digo postal.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Post Code";
                Editable=FALSE }

    { 91  ;3   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           ESP=Pa¡s/regi¢n];
                ToolTipML=[ENU=Specifies the country or region of the address.;
                           ESP=Especifica el pa¡s o la regi¢n de la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Country/Region Code";
                Editable=FALSE }

    { 36  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ESP=Contacto];
                ToolTipML=[ENU=Specifies the name of the person you regularly contact at the address that the items were shipped to.;
                           ESP=Especifica el nombre de la persona con la que habitualmente contacta en la direcci¢n a la que se enviaron los art¡culos.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Contact";
                Editable=FALSE }

    { 60  ;2   ;Group     ;
                CaptionML=[ENU=Bill-to;
                           ESP=Direcci¢n facturaci¢n];
                GroupType=Group }

    { 18  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ESP=Nombre];
                ToolTipML=[ENU=Specifies the name of the customer that the invoice was sent to.;
                           ESP=Especifica el nombre del cliente a quien se envi¢ la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Name";
                Importance=Promoted;
                Editable=FALSE }

    { 20  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ESP=Direcci¢n];
                ToolTipML=[ENU=Specifies the address of the customer that the invoice was sent to.;
                           ESP=Especifica la direcci¢n del cliente a quien se envi¢ la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address";
                Importance=Additional;
                Editable=FALSE }

    { 22  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ESP=Direcci¢n 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ESP=Especifica informaci¢n adicional sobre la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address 2";
                Importance=Additional;
                Editable=FALSE }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ESP=Poblaci¢n];
                ToolTipML=[ENU=Specifies the city of the customer on the sales document.;
                           ESP=Especifica la ciudad del cliente en el documento de ventas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to City";
                Importance=Additional;
                Editable=FALSE }

    { 95  ;3   ;Group     ;
                Visible=IsBillToCountyVisible;
                GroupType=Group }

    { 97  ;4   ;Field     ;
                CaptionML=[ENU=County;
                           ESP=Provincia];
                ToolTipML=[ENU=Specifies the state, province or county as a part of the address.;
                           ESP=Especifica el estado, provincia o comarca como parte de la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to County";
                Importance=Additional;
                Editable=FALSE }

    { 78  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ESP=C¢digo postal];
                ToolTipML=[ENU=Specifies the postal code.;
                           ESP=Especifica el c¢digo postal.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Post Code";
                Importance=Additional;
                Editable=FALSE }

    { 99  ;3   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           ESP=Pa¡s/regi¢n];
                ToolTipML=[ENU=Specifies the country or region of the address.;
                           ESP=Especifica el pa¡s o la regi¢n de la direcci¢n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Country/Region Code";
                Importance=Additional;
                Editable=FALSE }

    { 98  ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ESP=N§ contacto];
                ToolTipML=[ENU=Specifies the number of the contact the invoice was sent to.;
                           ESP=Especifica el n£mero del contacto a quien se envi¢ la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Contact No.";
                Importance=Additional;
                Editable=FALSE }

    { 26  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ESP=Contacto];
                ToolTipML=[ENU=Specifies the name of the person you regularly contact when you communicate with the customer to whom the invoice was sent.;
                           ESP=Especifica el nombre de la persona de contacto habitual cuando debe comunicarse con el cliente al que envi¢ la factura.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Contact";
                Editable=FALSE }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           ESP=Comercio exterior] }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the invoice was part of an EU 3-party trade transaction.;
                           ESP=Especifica si la factura form¢ parte de una operaci¢n triangular.];
                ApplicationArea=#Suite;
                SourceExpr="EU 3-Party Trade";
                Editable=FALSE }

    { 31  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the transaction specification that was used in the invoice.;
                           ESP=Precisa la especificaci¢n de transacci¢n usada en la factura.];
                ApplicationArea=#Suite;
                SourceExpr="Transaction Specification";
                Editable=FALSE }

    { 72  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the transport method of the sales header that this line was posted from.;
                           ESP=Especifica el mtodo de transporte que figura en la cabecera de ventas a partir de la cual se registr¢ esta l¡nea.];
                ApplicationArea=#Suite;
                SourceExpr="Transport Method";
                Editable=FALSE }

    { 74  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the point of exit through which you ship the items out of your country/region, for reporting to Intrastat.;
                           ESP=Especifica el punto de salida a travs del cual se env¡an los art¡culos fuera de su pa¡s o regi¢n para notificaciones de Intrastat.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Exit Point";
                Editable=FALSE }

    { 75  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the area code used in the invoice.;
                           ESP=Especifica el c¢digo de  rea usado en la factura.];
                ApplicationArea=#Suite;
                SourceExpr=Area;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1100288001;1;Part   ;
                Name=CaptureUI;
                CaptionML=[ENU=Document;
                           ESP=Documento];
                SubPageView=SORTING(Created Doc. Table No.,Created Doc. Subtype,Created Doc. No.,Created Doc. Ref. No.)
                            WHERE(Created Doc. Table No.=CONST(36),
                                  Created Doc. Subtype=CONST(1));
                SubPageLink=Created Doc. No.=FIELD(Order No.);
                PagePartID=Page6085791;
                Visible=ShowCaptureUIFactBox }

    { 1901275107;1;Part   ;
                Name=Attached Documents;
                CaptionML=[ENU=Attachments;
                           ESP=Datos adjuntos];
                ApplicationArea=#All;
                SubPageLink=Table ID=CONST(112),
                            No.=FIELD(No.);
                PagePartID=Page1174;
                PartType=Page }

    { 11  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page193;
                Visible=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      SalesInvHeader@1000 : Record 112;
      ApplicationAreaMgmtFacade@1010 : Codeunit 9179;
      CRMIntegrationManagement@1012 : Codeunit 5330;
      FormatAddress@1016 : Codeunit 365;
      ChangeExchangeRate@1001 : Page 511;
      HasIncomingDocument@1002 : Boolean;
      DocExchStatusStyle@1003 : Text;
      CRMIntegrationEnabled@1004 : Boolean;
      CRMIsCoupledToRecord@1005 : Boolean;
      PaymentServiceVisible@1007 : Boolean;
      PaymentServiceEnabled@1008 : Boolean;
      DocExcStatusVisible@1006 : Boolean;
      IsOfficeAddin@1009 : Boolean;
      IsFoundationEnabled@1011 : Boolean;
      IsBillToCountyVisible@1015 : Boolean;
      IsSellToCountyVisible@1014 : Boolean;
      IsShipToCountyVisible@1013 : Boolean;
      OperationDescription@1100000 : Text[500];
      "<DC>"@1100288010 : Boolean;
      ContiniaLicenseMgt@1100288009 : Codeunit 6192771;
      PurchInvHeaderDCInfo@1100288008 : Record 6085769;
      ApprovalFlowCode@1100288007 : Code[10];
      ShowApproval@1100288006 : Boolean;
      DCApprovalsBridge@1100288005 : Codeunit 6085790;
      SalesMgt@1100288004 : Codeunit 6085770;
      ShowCaptureUIFactBox@1100288003 : Boolean;
      DCApprovalMgt@1100288002 : Codeunit 6085722;
      NoOfDocuments@1100288001 : Text[1024];
      "</DC>"@1100288000 : Boolean;

    LOCAL PROCEDURE ActivateFields@11();
    BEGIN
      IsBillToCountyVisible := FormatAddress.UseCounty("Bill-to Country/Region Code");
      IsSellToCountyVisible := FormatAddress.UseCounty("Sell-to Country/Region Code");
      IsShipToCountyVisible := FormatAddress.UseCounty("Ship-to Country/Region Code");
    END;

    LOCAL PROCEDURE UpdatePaymentService@7();
    VAR
      PaymentServiceSetup@1000 : Record 1060;
    BEGIN
      PaymentServiceEnabled := PaymentServiceSetup.CanChangePaymentService(Rec);
    END;

    BEGIN
    END.
  }
}

